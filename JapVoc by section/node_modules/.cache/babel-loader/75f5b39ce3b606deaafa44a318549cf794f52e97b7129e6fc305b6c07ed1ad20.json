{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\siebe\\\\Cursor\\\\JapVoc by section\\\\src\\\\components\\\\WordPractice.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { quizWords } from '../data/quizData';\nimport { useTheme } from '../context/ThemeContext';\nimport { useProgress } from '../context/ProgressContext';\nimport { checkAnswer, calculateScore, calculateAverageTime } from '../utils/quizUtils';\nimport QuizModeSelector from './QuizModeSelector';\n\n// Sound effects\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst correctSound = new Audio('/sounds/correct.mp3');\nconst incorrectSound = new Audio('/sounds/incorrect.mp3');\nconst timeUpSound = new Audio('/sounds/timeup.mp3');\nconst WordPractice = () => {\n  _s();\n  const {\n    theme,\n    isDarkMode\n  } = useTheme();\n  const [selectedDifficulty, setSelectedDifficulty] = useState('easy');\n  const [selectedCategory, setSelectedCategory] = useState('food');\n  const [questionCount, setQuestionCount] = useState(10);\n  const [quizStarted, setQuizStarted] = useState(false);\n  const [currentWord, setCurrentWord] = useState(null);\n  const [userAnswer, setUserAnswer] = useState('');\n  const [score, setScore] = useState(0);\n  const [totalQuestions, setTotalQuestions] = useState(0);\n  const [showResult, setShowResult] = useState(false);\n  const [isCorrect, setIsCorrect] = useState(false);\n  const [usedWords, setUsedWords] = useState(new Set());\n  const [timeLeft, setTimeLeft] = useState(0);\n  const [showHint, setShowHint] = useState(false);\n  const [timerActive, setTimerActive] = useState(true);\n  const [soundEnabled, setSoundEnabled] = useState(true);\n  const [streak, setStreak] = useState(0);\n  const [averageTime, setAverageTime] = useState(0);\n  const [quizMode, setQuizMode] = useState('multiple-choice');\n  const [options, setOptions] = useState([]);\n  const [feedbackMessage, setFeedbackMessage] = useState('');\n  const progressRef = useRef(null);\n  const inputRef = useRef(null);\n  const {\n    updateProgress\n  } = useProgress();\n  const getFilteredWords = () => {\n    return quizWords.filter(word => {\n      const matchesDifficulty = word.difficulty === selectedDifficulty;\n      const matchesCategory = selectedCategory === 'all' || word.category === selectedCategory;\n      return matchesDifficulty && matchesCategory;\n    });\n  };\n  const getRandomWord = () => {\n    const filteredWords = getFilteredWords();\n    const availableWords = filteredWords.filter(word => !usedWords.has(word.japanese));\n    if (availableWords.length === 0) {\n      setUsedWords(new Set());\n      return filteredWords[Math.floor(Math.random() * filteredWords.length)];\n    }\n    return availableWords[Math.floor(Math.random() * availableWords.length)];\n  };\n  const generateOptions = correctWord => {\n    const filteredWords = getFilteredWords();\n    const otherWords = filteredWords.filter(word => word.japanese !== correctWord.japanese);\n    const shuffled = otherWords.sort(() => 0.5 - Math.random());\n    const selected = shuffled.slice(0, 3);\n    const options = [...selected.map(word => word.english), correctWord.english];\n    return options.sort(() => 0.5 - Math.random());\n  };\n  const getTimeForDifficulty = difficulty => {\n    switch (difficulty) {\n      case 'easy':\n        return 45;\n      case 'medium':\n        return 30;\n      case 'hard':\n        return 20;\n      default:\n        return 30;\n    }\n  };\n  const getFeedbackMessage = (isCorrect, streak) => {\n    if (isCorrect) {\n      if (streak > 5) return 'Incredible! You\\'re on fire! 🔥';\n      if (streak > 3) return 'Amazing streak! Keep it up! 💪';\n      if (streak > 1) return 'Great job! You\\'re getting better! 🌟';\n      return 'Correct! Well done! ✅';\n    } else {\n      return 'Not quite right. Keep practicing! 💪';\n    }\n  };\n  const startNewPractice = () => {\n    setScore(0);\n    setTotalQuestions(0);\n    setShowResult(false);\n    setUsedWords(new Set());\n    const newWord = getRandomWord();\n    setCurrentWord(newWord);\n    setOptions(generateOptions(newWord));\n    setTimeLeft(getTimeForDifficulty(selectedDifficulty));\n    setShowHint(false);\n    setTimerActive(true);\n    setStreak(0);\n    setFeedbackMessage('');\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  };\n  const startQuiz = () => {\n    setQuizStarted(true);\n    startNewPractice();\n  };\n  const resetQuiz = () => {\n    setQuizStarted(false);\n    setScore(0);\n    setTotalQuestions(0);\n    setShowResult(false);\n    setUsedWords(new Set());\n    setCurrentWord(null);\n    setTimeLeft(0);\n    setShowHint(false);\n    setTimerActive(false);\n    setStreak(0);\n    setFeedbackMessage('');\n  };\n  const playSound = sound => {\n    if (soundEnabled) {\n      sound.currentTime = 0;\n      sound.play().catch(() => {\n        setSoundEnabled(false);\n      });\n    }\n  };\n  const handleAnswer = answer => {\n    if (!timerActive || !currentWord) return;\n    const isAnswerCorrect = checkAnswer(answer, currentWord.english);\n    const pointsEarned = calculateScore(isAnswerCorrect, streak);\n    if (isAnswerCorrect) {\n      playSound(correctSound);\n      setStreak(prev => prev + 1);\n    } else {\n      playSound(incorrectSound);\n      setStreak(0);\n    }\n    setScore(prev => prev + pointsEarned);\n    setTotalQuestions(prev => prev + 1);\n    setUsedWords(prev => new Set([...prev, currentWord.japanese]));\n    setIsCorrect(isAnswerCorrect);\n    setShowResult(true);\n    setTimerActive(false);\n    setFeedbackMessage(getFeedbackMessage(isAnswerCorrect, streak));\n    updateProgress('wordPractice', {\n      correctAnswers: isAnswerCorrect ? score + 1 : score,\n      bestStreak: Math.max(streak, streak + (isAnswerCorrect ? 1 : 0)),\n      averageTime: calculateAverageTime(averageTime, totalQuestions, timeLeft)\n    });\n    setAverageTime(calculateAverageTime(averageTime, totalQuestions, timeLeft));\n  };\n  const handleNext = () => {\n    setUserAnswer('');\n    setShowResult(false);\n    const newWord = getRandomWord();\n    setCurrentWord(newWord);\n    setOptions(generateOptions(newWord));\n    setTimeLeft(getTimeForDifficulty(selectedDifficulty));\n    setShowHint(false);\n    setTimerActive(true);\n    setFeedbackMessage('');\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  };\n  useEffect(() => {\n    startNewPractice();\n  }, [selectedDifficulty, selectedCategory, quizMode]);\n  useEffect(() => {\n    let timer;\n    if (timerActive && timeLeft > 0) {\n      timer = setInterval(() => {\n        setTimeLeft(prev => prev - 1);\n      }, 1000);\n    } else if (timeLeft === 0 && !showResult) {\n      playSound(timeUpSound);\n      handleAnswer('');\n    }\n    return () => clearInterval(timer);\n  }, [timeLeft, timerActive]);\n  useEffect(() => {\n    if (progressRef.current) {\n      const maxTime = getTimeForDifficulty(selectedDifficulty);\n      const progress = timeLeft / maxTime * 100;\n      progressRef.current.style.width = `${progress}%`;\n    }\n  }, [timeLeft, selectedDifficulty]);\n  const getThemeClasses = () => {\n    if (isDarkMode) {\n      return {\n        container: 'bg-dark-card',\n        text: 'text-dark-text',\n        input: 'bg-dark-bg border-dark-border text-dark-text',\n        button: {\n          primary: 'bg-primary hover:bg-primary-dark text-white',\n          secondary: 'bg-secondary hover:bg-secondary-dark text-white',\n          hint: 'bg-yellow-500 hover:bg-yellow-600 text-white',\n          inactive: 'bg-gray-100 hover:bg-gray-200 text-gray-800 dark:bg-dark-border dark:hover:bg-dark-border/80 dark:text-dark-text'\n        },\n        hint: 'bg-yellow-900/20 border-yellow-800/30 text-yellow-200',\n        result: {\n          correct: 'bg-green-900/20 border-green-800/30 text-green-200',\n          incorrect: 'bg-red-900/20 border-red-800/30 text-red-200'\n        }\n      };\n    }\n    switch (theme) {\n      case 'blue':\n        return {\n          container: 'bg-blue-card',\n          text: 'text-blue-text',\n          input: 'bg-white border-blue-border text-blue-text',\n          button: {\n            primary: 'bg-primary hover:bg-primary-dark text-white',\n            secondary: 'bg-secondary hover:bg-secondary-dark text-white',\n            hint: 'bg-yellow-500 hover:bg-yellow-600 text-white',\n            inactive: 'bg-gray-100 hover:bg-gray-200 text-gray-800 dark:bg-dark-border dark:hover:bg-dark-border/80 dark:text-dark-text'\n          },\n          hint: 'bg-yellow-50 border-yellow-200 text-yellow-800',\n          result: {\n            correct: 'bg-green-50 border-green-200 text-green-800',\n            incorrect: 'bg-red-50 border-red-200 text-red-800'\n          }\n        };\n      case 'green':\n        return {\n          container: 'bg-green-card',\n          text: 'text-green-text',\n          input: 'bg-white border-green-border text-green-text',\n          button: {\n            primary: 'bg-primary hover:bg-primary-dark text-white',\n            secondary: 'bg-secondary hover:bg-secondary-dark text-white',\n            hint: 'bg-yellow-500 hover:bg-yellow-600 text-white',\n            inactive: 'bg-gray-100 hover:bg-gray-200 text-gray-800 dark:bg-dark-border dark:hover:bg-dark-border/80 dark:text-dark-text'\n          },\n          hint: 'bg-yellow-50 border-yellow-200 text-yellow-800',\n          result: {\n            correct: 'bg-green-50 border-green-200 text-green-800',\n            incorrect: 'bg-red-50 border-red-200 text-red-800'\n          }\n        };\n      default:\n        return {\n          container: 'bg-white',\n          text: 'text-gray-800',\n          input: 'bg-white border-gray-200 text-gray-800',\n          button: {\n            primary: 'bg-primary hover:bg-primary-dark text-white',\n            secondary: 'bg-secondary hover:bg-secondary-dark text-white',\n            hint: 'bg-yellow-500 hover:bg-yellow-600 text-white',\n            inactive: 'bg-gray-100 hover:bg-gray-200 text-gray-800 dark:bg-dark-border dark:hover:bg-dark-border/80 dark:text-dark-text'\n          },\n          hint: 'bg-yellow-50 border-yellow-200 text-yellow-800',\n          result: {\n            correct: 'bg-green-50 border-green-200 text-green-800',\n            incorrect: 'bg-red-50 border-red-200 text-red-800'\n          }\n        };\n    }\n  };\n  const themeClasses = getThemeClasses();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-2xl mx-auto\",\n    children: !quizStarted ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${themeClasses.container} rounded-lg shadow-md p-6`,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: `text-2xl font-bold mb-6 ${themeClasses.text}`,\n        children: \"Quiz Setup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: `block mb-2 ${themeClasses.text}`,\n            children: \"Difficulty Level:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedDifficulty,\n            onChange: e => setSelectedDifficulty(e.target.value),\n            className: `w-full p-3 border rounded-lg ${themeClasses.input} focus:ring-2 focus:ring-primary focus:border-primary`,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"easy\",\n              children: \"Easy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"medium\",\n              children: \"Medium\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"hard\",\n              children: \"Hard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: `block mb-2 ${themeClasses.text}`,\n            children: \"Category:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedCategory,\n            onChange: e => setSelectedCategory(e.target.value),\n            className: `w-full p-3 border rounded-lg ${themeClasses.input} focus:ring-2 focus:ring-primary focus:border-primary`,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"food\",\n              children: \"Food\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"animals\",\n              children: \"Animals\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"colors\",\n              children: \"Colors\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"numbers\",\n              children: \"Numbers\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"all\",\n              children: \"All Categories\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: `block mb-2 ${themeClasses.text}`,\n            children: \"Number of Questions:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: questionCount,\n            onChange: e => setQuestionCount(Number(e.target.value)),\n            className: `w-full p-3 border rounded-lg ${themeClasses.input} focus:ring-2 focus:ring-primary focus:border-primary`,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"5\",\n              children: \"5 Questions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"10\",\n              children: \"10 Questions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"15\",\n              children: \"15 Questions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"20\",\n              children: \"20 Questions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startQuiz,\n          className: `w-full ${themeClasses.button.primary} py-3 rounded-lg transition-colors`,\n          children: \"Start Quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(QuizModeSelector, {\n        selectedMode: quizMode,\n        onModeSelect: setQuizMode,\n        availableModes: ['multiple-choice', 'writing', 'flashcards']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `mb-8 ${themeClasses.container} rounded-lg shadow-md p-6`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-wrap gap-4 mb-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: resetQuiz,\n            className: `p-3 rounded-lg transition-colors ${themeClasses.button.secondary}`,\n            children: \"\\u2190 Back to Setup\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setSoundEnabled(!soundEnabled),\n            className: `p-3 rounded-lg transition-colors ${soundEnabled ? 'bg-green-500 hover:bg-green-600' : 'bg-red-500 hover:bg-red-600'} text-white`,\n            children: soundEnabled ? '🔊' : '🔇'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `text-lg font-semibold ${themeClasses.text}`,\n            children: [\"Score: \", score, \"/\", totalQuestions, streak > 2 && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"ml-2 text-yellow-500\",\n              children: [\"\\uD83D\\uDD25 \", streak, \" streak!\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `text-lg font-semibold ${timeLeft <= 10 ? 'text-red-500 animate-pulse' : themeClasses.text}`,\n            children: [\"Time: \", timeLeft, \"s\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full h-2 bg-gray-200 dark:bg-dark-border rounded-full overflow-hidden\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: progressRef,\n            className: `h-full transition-all duration-1000 ${timeLeft <= 10 ? 'bg-red-500' : 'bg-primary'}`,\n            style: {\n              width: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 11\n      }, this), currentWord && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${themeClasses.container} rounded-lg shadow-md p-6 transform transition-all duration-300 hover:shadow-lg`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `text-3xl font-bold text-center mb-4 ${themeClasses.text}`,\n          children: currentWord.japanese\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 15\n        }, this), selectedDifficulty === 'easy' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `text-xl text-center mb-4 ${themeClasses.text} opacity-75`,\n          children: currentWord.romaji\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 17\n        }, this), !showHint && !showResult && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowHint(true),\n          className: `w-full mb-6 ${themeClasses.button.hint} py-3 rounded-lg transition-colors`,\n          children: \"Show Hint\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 17\n        }, this), showHint && !showResult && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `mb-6 p-4 rounded-lg ${themeClasses.hint}`,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: currentWord.hint\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 17\n        }, this), quizMode === 'multiple-choice' && !showResult && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 gap-3\",\n          children: options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleAnswer(option),\n            className: `p-4 rounded-lg text-left transition-colors ${themeClasses.button.inactive}`,\n            children: option\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 17\n        }, this), quizMode === 'writing' && !showResult && /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => {\n            e.preventDefault();\n            handleAnswer(userAnswer);\n          },\n          className: \"space-y-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            ref: inputRef,\n            type: \"text\",\n            value: userAnswer,\n            onChange: e => setUserAnswer(e.target.value),\n            placeholder: \"Type the English translation\",\n            className: `w-full p-3 border rounded-lg ${themeClasses.input} focus:ring-2 focus:ring-primary focus:border-primary`,\n            disabled: showResult\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: `w-full ${themeClasses.button.primary} py-3 rounded-lg transition-colors`,\n            children: \"Check Answer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 17\n        }, this), showResult && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `text-center p-6 rounded-lg ${isCorrect ? themeClasses.result.correct : themeClasses.result.incorrect}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-2xl mb-2\",\n              children: isCorrect ? '🎉' : '💪'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-xl font-bold mb-2\",\n              children: isCorrect ? 'Correct!' : 'Incorrect'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-2\",\n              children: feedbackMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm opacity-75\",\n              children: !isCorrect && `The correct answer is: ${currentWord.english}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleNext,\n            className: `w-full ${themeClasses.button.secondary} py-3 rounded-lg transition-colors flex items-center justify-center gap-2`,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Next Question\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u2192\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 286,\n    columnNumber: 5\n  }, this);\n};\n_s(WordPractice, \"81eUQL7ZOqmV1lE5n5sDec+DTNg=\", false, function () {\n  return [useTheme, useProgress];\n});\n_c = WordPractice;\nexport default WordPractice;\nvar _c;\n$RefreshReg$(_c, \"WordPractice\");","map":{"version":3,"names":["React","useState","useEffect","useRef","quizWords","useTheme","useProgress","checkAnswer","calculateScore","calculateAverageTime","QuizModeSelector","jsxDEV","_jsxDEV","Fragment","_Fragment","correctSound","Audio","incorrectSound","timeUpSound","WordPractice","_s","theme","isDarkMode","selectedDifficulty","setSelectedDifficulty","selectedCategory","setSelectedCategory","questionCount","setQuestionCount","quizStarted","setQuizStarted","currentWord","setCurrentWord","userAnswer","setUserAnswer","score","setScore","totalQuestions","setTotalQuestions","showResult","setShowResult","isCorrect","setIsCorrect","usedWords","setUsedWords","Set","timeLeft","setTimeLeft","showHint","setShowHint","timerActive","setTimerActive","soundEnabled","setSoundEnabled","streak","setStreak","averageTime","setAverageTime","quizMode","setQuizMode","options","setOptions","feedbackMessage","setFeedbackMessage","progressRef","inputRef","updateProgress","getFilteredWords","filter","word","matchesDifficulty","difficulty","matchesCategory","category","getRandomWord","filteredWords","availableWords","has","japanese","length","Math","floor","random","generateOptions","correctWord","otherWords","shuffled","sort","selected","slice","map","english","getTimeForDifficulty","getFeedbackMessage","startNewPractice","newWord","current","focus","startQuiz","resetQuiz","playSound","sound","currentTime","play","catch","handleAnswer","answer","isAnswerCorrect","pointsEarned","prev","correctAnswers","bestStreak","max","handleNext","timer","setInterval","clearInterval","maxTime","progress","style","width","getThemeClasses","container","text","input","button","primary","secondary","hint","inactive","result","correct","incorrect","themeClasses","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","Number","onClick","selectedMode","onModeSelect","availableModes","ref","romaji","option","index","onSubmit","preventDefault","type","placeholder","disabled","_c","$RefreshReg$"],"sources":["C:/Users/siebe/Cursor/JapVoc by section/src/components/WordPractice.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { QuizWord, Difficulty, Category, quizWords } from '../data/quizData';\r\nimport { useTheme } from '../context/ThemeContext';\r\nimport { useProgress } from '../context/ProgressContext';\r\nimport { checkAnswer, calculateScore, calculateAverageTime } from '../utils/quizUtils';\r\nimport QuizModeSelector, { QuizMode } from './QuizModeSelector';\r\n\r\n// Sound effects\r\nconst correctSound = new Audio('/sounds/correct.mp3');\r\nconst incorrectSound = new Audio('/sounds/incorrect.mp3');\r\nconst timeUpSound = new Audio('/sounds/timeup.mp3');\r\n\r\nconst WordPractice: React.FC = () => {\r\n  const { theme, isDarkMode } = useTheme();\r\n  const [selectedDifficulty, setSelectedDifficulty] = useState<Difficulty>('easy');\r\n  const [selectedCategory, setSelectedCategory] = useState<Category>('food');\r\n  const [questionCount, setQuestionCount] = useState(10);\r\n  const [quizStarted, setQuizStarted] = useState(false);\r\n  const [currentWord, setCurrentWord] = useState<QuizWord | null>(null);\r\n  const [userAnswer, setUserAnswer] = useState('');\r\n  const [score, setScore] = useState(0);\r\n  const [totalQuestions, setTotalQuestions] = useState(0);\r\n  const [showResult, setShowResult] = useState(false);\r\n  const [isCorrect, setIsCorrect] = useState(false);\r\n  const [usedWords, setUsedWords] = useState<Set<string>>(new Set());\r\n  const [timeLeft, setTimeLeft] = useState(0);\r\n  const [showHint, setShowHint] = useState(false);\r\n  const [timerActive, setTimerActive] = useState(true);\r\n  const [soundEnabled, setSoundEnabled] = useState(true);\r\n  const [streak, setStreak] = useState(0);\r\n  const [averageTime, setAverageTime] = useState(0);\r\n  const [quizMode, setQuizMode] = useState<QuizMode>('multiple-choice');\r\n  const [options, setOptions] = useState<string[]>([]);\r\n  const [feedbackMessage, setFeedbackMessage] = useState('');\r\n  const progressRef = useRef<HTMLDivElement>(null);\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n  const { updateProgress } = useProgress();\r\n\r\n  const getFilteredWords = () => {\r\n    return quizWords.filter(word => {\r\n      const matchesDifficulty = word.difficulty === selectedDifficulty;\r\n      const matchesCategory = selectedCategory === 'all' || word.category === selectedCategory;\r\n      return matchesDifficulty && matchesCategory;\r\n    });\r\n  };\r\n\r\n  const getRandomWord = () => {\r\n    const filteredWords = getFilteredWords();\r\n    const availableWords = filteredWords.filter(word => !usedWords.has(word.japanese));\r\n    \r\n    if (availableWords.length === 0) {\r\n      setUsedWords(new Set());\r\n      return filteredWords[Math.floor(Math.random() * filteredWords.length)];\r\n    }\r\n    \r\n    return availableWords[Math.floor(Math.random() * availableWords.length)];\r\n  };\r\n\r\n  const generateOptions = (correctWord: QuizWord) => {\r\n    const filteredWords = getFilteredWords();\r\n    const otherWords = filteredWords.filter(word => word.japanese !== correctWord.japanese);\r\n    const shuffled = otherWords.sort(() => 0.5 - Math.random());\r\n    const selected = shuffled.slice(0, 3);\r\n    const options = [...selected.map(word => word.english), correctWord.english];\r\n    return options.sort(() => 0.5 - Math.random());\r\n  };\r\n\r\n  const getTimeForDifficulty = (difficulty: Difficulty): number => {\r\n    switch (difficulty) {\r\n      case 'easy':\r\n        return 45;\r\n      case 'medium':\r\n        return 30;\r\n      case 'hard':\r\n        return 20;\r\n      default:\r\n        return 30;\r\n    }\r\n  };\r\n\r\n  const getFeedbackMessage = (isCorrect: boolean, streak: number): string => {\r\n    if (isCorrect) {\r\n      if (streak > 5) return 'Incredible! You\\'re on fire! 🔥';\r\n      if (streak > 3) return 'Amazing streak! Keep it up! 💪';\r\n      if (streak > 1) return 'Great job! You\\'re getting better! 🌟';\r\n      return 'Correct! Well done! ✅';\r\n    } else {\r\n      return 'Not quite right. Keep practicing! 💪';\r\n    }\r\n  };\r\n\r\n  const startNewPractice = () => {\r\n    setScore(0);\r\n    setTotalQuestions(0);\r\n    setShowResult(false);\r\n    setUsedWords(new Set());\r\n    const newWord = getRandomWord();\r\n    setCurrentWord(newWord);\r\n    setOptions(generateOptions(newWord));\r\n    setTimeLeft(getTimeForDifficulty(selectedDifficulty));\r\n    setShowHint(false);\r\n    setTimerActive(true);\r\n    setStreak(0);\r\n    setFeedbackMessage('');\r\n    if (inputRef.current) {\r\n      inputRef.current.focus();\r\n    }\r\n  };\r\n\r\n  const startQuiz = () => {\r\n    setQuizStarted(true);\r\n    startNewPractice();\r\n  };\r\n\r\n  const resetQuiz = () => {\r\n    setQuizStarted(false);\r\n    setScore(0);\r\n    setTotalQuestions(0);\r\n    setShowResult(false);\r\n    setUsedWords(new Set());\r\n    setCurrentWord(null);\r\n    setTimeLeft(0);\r\n    setShowHint(false);\r\n    setTimerActive(false);\r\n    setStreak(0);\r\n    setFeedbackMessage('');\r\n  };\r\n\r\n  const playSound = (sound: HTMLAudioElement) => {\r\n    if (soundEnabled) {\r\n      sound.currentTime = 0;\r\n      sound.play().catch(() => {\r\n        setSoundEnabled(false);\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleAnswer = (answer: string) => {\r\n    if (!timerActive || !currentWord) return;\r\n\r\n    const isAnswerCorrect = checkAnswer(answer, currentWord.english);\r\n    const pointsEarned = calculateScore(isAnswerCorrect, streak);\r\n\r\n    if (isAnswerCorrect) {\r\n      playSound(correctSound);\r\n      setStreak(prev => prev + 1);\r\n    } else {\r\n      playSound(incorrectSound);\r\n      setStreak(0);\r\n    }\r\n\r\n    setScore(prev => prev + pointsEarned);\r\n    setTotalQuestions(prev => prev + 1);\r\n    setUsedWords(prev => new Set([...prev, currentWord.japanese]));\r\n    setIsCorrect(isAnswerCorrect);\r\n    setShowResult(true);\r\n    setTimerActive(false);\r\n    setFeedbackMessage(getFeedbackMessage(isAnswerCorrect, streak));\r\n\r\n    updateProgress('wordPractice', {\r\n      correctAnswers: isAnswerCorrect ? (score + 1) : score,\r\n      bestStreak: Math.max(streak, streak + (isAnswerCorrect ? 1 : 0)),\r\n      averageTime: calculateAverageTime(averageTime, totalQuestions, timeLeft)\r\n    });\r\n    setAverageTime(calculateAverageTime(averageTime, totalQuestions, timeLeft));\r\n  };\r\n\r\n  const handleNext = () => {\r\n    setUserAnswer('');\r\n    setShowResult(false);\r\n    const newWord = getRandomWord();\r\n    setCurrentWord(newWord);\r\n    setOptions(generateOptions(newWord));\r\n    setTimeLeft(getTimeForDifficulty(selectedDifficulty));\r\n    setShowHint(false);\r\n    setTimerActive(true);\r\n    setFeedbackMessage('');\r\n    if (inputRef.current) {\r\n      inputRef.current.focus();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    startNewPractice();\r\n  }, [selectedDifficulty, selectedCategory, quizMode]);\r\n\r\n  useEffect(() => {\r\n    let timer: NodeJS.Timeout;\r\n    if (timerActive && timeLeft > 0) {\r\n      timer = setInterval(() => {\r\n        setTimeLeft(prev => prev - 1);\r\n      }, 1000);\r\n    } else if (timeLeft === 0 && !showResult) {\r\n      playSound(timeUpSound);\r\n      handleAnswer('');\r\n    }\r\n    return () => clearInterval(timer);\r\n  }, [timeLeft, timerActive]);\r\n\r\n  useEffect(() => {\r\n    if (progressRef.current) {\r\n      const maxTime = getTimeForDifficulty(selectedDifficulty);\r\n      const progress = (timeLeft / maxTime) * 100;\r\n      progressRef.current.style.width = `${progress}%`;\r\n    }\r\n  }, [timeLeft, selectedDifficulty]);\r\n\r\n  const getThemeClasses = () => {\r\n    if (isDarkMode) {\r\n      return {\r\n        container: 'bg-dark-card',\r\n        text: 'text-dark-text',\r\n        input: 'bg-dark-bg border-dark-border text-dark-text',\r\n        button: {\r\n          primary: 'bg-primary hover:bg-primary-dark text-white',\r\n          secondary: 'bg-secondary hover:bg-secondary-dark text-white',\r\n          hint: 'bg-yellow-500 hover:bg-yellow-600 text-white',\r\n          inactive: 'bg-gray-100 hover:bg-gray-200 text-gray-800 dark:bg-dark-border dark:hover:bg-dark-border/80 dark:text-dark-text',\r\n        },\r\n        hint: 'bg-yellow-900/20 border-yellow-800/30 text-yellow-200',\r\n        result: {\r\n          correct: 'bg-green-900/20 border-green-800/30 text-green-200',\r\n          incorrect: 'bg-red-900/20 border-red-800/30 text-red-200',\r\n        },\r\n      };\r\n    }\r\n\r\n    switch (theme) {\r\n      case 'blue':\r\n        return {\r\n          container: 'bg-blue-card',\r\n          text: 'text-blue-text',\r\n          input: 'bg-white border-blue-border text-blue-text',\r\n          button: {\r\n            primary: 'bg-primary hover:bg-primary-dark text-white',\r\n            secondary: 'bg-secondary hover:bg-secondary-dark text-white',\r\n            hint: 'bg-yellow-500 hover:bg-yellow-600 text-white',\r\n            inactive: 'bg-gray-100 hover:bg-gray-200 text-gray-800 dark:bg-dark-border dark:hover:bg-dark-border/80 dark:text-dark-text',\r\n          },\r\n          hint: 'bg-yellow-50 border-yellow-200 text-yellow-800',\r\n          result: {\r\n            correct: 'bg-green-50 border-green-200 text-green-800',\r\n            incorrect: 'bg-red-50 border-red-200 text-red-800',\r\n          },\r\n        };\r\n      case 'green':\r\n        return {\r\n          container: 'bg-green-card',\r\n          text: 'text-green-text',\r\n          input: 'bg-white border-green-border text-green-text',\r\n          button: {\r\n            primary: 'bg-primary hover:bg-primary-dark text-white',\r\n            secondary: 'bg-secondary hover:bg-secondary-dark text-white',\r\n            hint: 'bg-yellow-500 hover:bg-yellow-600 text-white',\r\n            inactive: 'bg-gray-100 hover:bg-gray-200 text-gray-800 dark:bg-dark-border dark:hover:bg-dark-border/80 dark:text-dark-text',\r\n          },\r\n          hint: 'bg-yellow-50 border-yellow-200 text-yellow-800',\r\n          result: {\r\n            correct: 'bg-green-50 border-green-200 text-green-800',\r\n            incorrect: 'bg-red-50 border-red-200 text-red-800',\r\n          },\r\n        };\r\n      default:\r\n        return {\r\n          container: 'bg-white',\r\n          text: 'text-gray-800',\r\n          input: 'bg-white border-gray-200 text-gray-800',\r\n          button: {\r\n            primary: 'bg-primary hover:bg-primary-dark text-white',\r\n            secondary: 'bg-secondary hover:bg-secondary-dark text-white',\r\n            hint: 'bg-yellow-500 hover:bg-yellow-600 text-white',\r\n            inactive: 'bg-gray-100 hover:bg-gray-200 text-gray-800 dark:bg-dark-border dark:hover:bg-dark-border/80 dark:text-dark-text',\r\n          },\r\n          hint: 'bg-yellow-50 border-yellow-200 text-yellow-800',\r\n          result: {\r\n            correct: 'bg-green-50 border-green-200 text-green-800',\r\n            incorrect: 'bg-red-50 border-red-200 text-red-800',\r\n          },\r\n        };\r\n    }\r\n  };\r\n\r\n  const themeClasses = getThemeClasses();\r\n\r\n  return (\r\n    <div className=\"max-w-2xl mx-auto\">\r\n      {!quizStarted ? (\r\n        <div className={`${themeClasses.container} rounded-lg shadow-md p-6`}>\r\n          <h2 className={`text-2xl font-bold mb-6 ${themeClasses.text}`}>\r\n            Quiz Setup\r\n          </h2>\r\n          \r\n          <div className=\"space-y-6\">\r\n            <div>\r\n              <label className={`block mb-2 ${themeClasses.text}`}>Difficulty Level:</label>\r\n              <select\r\n                value={selectedDifficulty}\r\n                onChange={(e) => setSelectedDifficulty(e.target.value as Difficulty)}\r\n                className={`w-full p-3 border rounded-lg ${themeClasses.input} focus:ring-2 focus:ring-primary focus:border-primary`}\r\n              >\r\n                <option value=\"easy\">Easy</option>\r\n                <option value=\"medium\">Medium</option>\r\n                <option value=\"hard\">Hard</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div>\r\n              <label className={`block mb-2 ${themeClasses.text}`}>Category:</label>\r\n              <select\r\n                value={selectedCategory}\r\n                onChange={(e) => setSelectedCategory(e.target.value as Category)}\r\n                className={`w-full p-3 border rounded-lg ${themeClasses.input} focus:ring-2 focus:ring-primary focus:border-primary`}\r\n              >\r\n                <option value=\"food\">Food</option>\r\n                <option value=\"animals\">Animals</option>\r\n                <option value=\"colors\">Colors</option>\r\n                <option value=\"numbers\">Numbers</option>\r\n                <option value=\"all\">All Categories</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div>\r\n              <label className={`block mb-2 ${themeClasses.text}`}>Number of Questions:</label>\r\n              <select\r\n                value={questionCount}\r\n                onChange={(e) => setQuestionCount(Number(e.target.value))}\r\n                className={`w-full p-3 border rounded-lg ${themeClasses.input} focus:ring-2 focus:ring-primary focus:border-primary`}\r\n              >\r\n                <option value=\"5\">5 Questions</option>\r\n                <option value=\"10\">10 Questions</option>\r\n                <option value=\"15\">15 Questions</option>\r\n                <option value=\"20\">20 Questions</option>\r\n              </select>\r\n            </div>\r\n\r\n            <button\r\n              onClick={startQuiz}\r\n              className={`w-full ${themeClasses.button.primary} py-3 rounded-lg transition-colors`}\r\n            >\r\n              Start Quiz\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <QuizModeSelector\r\n            selectedMode={quizMode}\r\n            onModeSelect={setQuizMode}\r\n            availableModes={['multiple-choice', 'writing', 'flashcards']}\r\n          />\r\n\r\n          <div className={`mb-8 ${themeClasses.container} rounded-lg shadow-md p-6`}>\r\n            <div className=\"flex flex-wrap gap-4 mb-6\">\r\n              <button\r\n                onClick={resetQuiz}\r\n                className={`p-3 rounded-lg transition-colors ${themeClasses.button.secondary}`}\r\n              >\r\n                ← Back to Setup\r\n              </button>\r\n\r\n              <button\r\n                onClick={() => setSoundEnabled(!soundEnabled)}\r\n                className={`p-3 rounded-lg transition-colors ${\r\n                  soundEnabled ? 'bg-green-500 hover:bg-green-600' : 'bg-red-500 hover:bg-red-600'\r\n                } text-white`}\r\n              >\r\n                {soundEnabled ? '🔊' : '🔇'}\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"flex justify-between items-center mb-4\">\r\n              <div className={`text-lg font-semibold ${themeClasses.text}`}>\r\n                Score: {score}/{totalQuestions}\r\n                {streak > 2 && (\r\n                  <span className=\"ml-2 text-yellow-500\">\r\n                    🔥 {streak} streak!\r\n                  </span>\r\n                )}\r\n              </div>\r\n              <div className={`text-lg font-semibold ${timeLeft <= 10 ? 'text-red-500 animate-pulse' : themeClasses.text}`}>\r\n                Time: {timeLeft}s\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"w-full h-2 bg-gray-200 dark:bg-dark-border rounded-full overflow-hidden\">\r\n              <div\r\n                ref={progressRef}\r\n                className={`h-full transition-all duration-1000 ${\r\n                  timeLeft <= 10 ? 'bg-red-500' : 'bg-primary'\r\n                }`}\r\n                style={{ width: '100%' }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {currentWord && (\r\n            <div className={`${themeClasses.container} rounded-lg shadow-md p-6 transform transition-all duration-300 hover:shadow-lg`}>\r\n              <div className={`text-3xl font-bold text-center mb-4 ${themeClasses.text}`}>\r\n                {currentWord.japanese}\r\n              </div>\r\n              {selectedDifficulty === 'easy' && (\r\n                <div className={`text-xl text-center mb-4 ${themeClasses.text} opacity-75`}>\r\n                  {currentWord.romaji}\r\n                </div>\r\n              )}\r\n\r\n              {!showHint && !showResult && (\r\n                <button\r\n                  onClick={() => setShowHint(true)}\r\n                  className={`w-full mb-6 ${themeClasses.button.hint} py-3 rounded-lg transition-colors`}\r\n                >\r\n                  Show Hint\r\n                </button>\r\n              )}\r\n\r\n              {showHint && !showResult && (\r\n                <div className={`mb-6 p-4 rounded-lg ${themeClasses.hint}`}>\r\n                  <p>{currentWord.hint}</p>\r\n                </div>\r\n              )}\r\n\r\n              {quizMode === 'multiple-choice' && !showResult && (\r\n                <div className=\"grid grid-cols-1 gap-3\">\r\n                  {options.map((option, index) => (\r\n                    <button\r\n                      key={index}\r\n                      onClick={() => handleAnswer(option)}\r\n                      className={`p-4 rounded-lg text-left transition-colors ${\r\n                        themeClasses.button.inactive\r\n                      }`}\r\n                    >\r\n                      {option}\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n              )}\r\n\r\n              {quizMode === 'writing' && !showResult && (\r\n                <form onSubmit={(e) => { e.preventDefault(); handleAnswer(userAnswer); }} className=\"space-y-4\">\r\n                  <input\r\n                    ref={inputRef}\r\n                    type=\"text\"\r\n                    value={userAnswer}\r\n                    onChange={(e) => setUserAnswer(e.target.value)}\r\n                    placeholder=\"Type the English translation\"\r\n                    className={`w-full p-3 border rounded-lg ${themeClasses.input} focus:ring-2 focus:ring-primary focus:border-primary`}\r\n                    disabled={showResult}\r\n                  />\r\n\r\n                  <button\r\n                    type=\"submit\"\r\n                    className={`w-full ${themeClasses.button.primary} py-3 rounded-lg transition-colors`}\r\n                  >\r\n                    Check Answer\r\n                  </button>\r\n                </form>\r\n              )}\r\n\r\n              {showResult && (\r\n                <div className=\"space-y-4\">\r\n                  <div className={`text-center p-6 rounded-lg ${\r\n                    isCorrect ? themeClasses.result.correct : themeClasses.result.incorrect\r\n                  }`}>\r\n                    <div className=\"text-2xl mb-2\">\r\n                      {isCorrect ? '🎉' : '💪'}\r\n                    </div>\r\n                    <div className=\"text-xl font-bold mb-2\">\r\n                      {isCorrect ? 'Correct!' : 'Incorrect'}\r\n                    </div>\r\n                    <div className=\"mb-2\">\r\n                      {feedbackMessage}\r\n                    </div>\r\n                    <div className=\"text-sm opacity-75\">\r\n                      {!isCorrect && `The correct answer is: ${currentWord.english}`}\r\n                    </div>\r\n                  </div>\r\n                  <button\r\n                    onClick={handleNext}\r\n                    className={`w-full ${themeClasses.button.secondary} py-3 rounded-lg transition-colors flex items-center justify-center gap-2`}\r\n                  >\r\n                    <span>Next Question</span>\r\n                    <span>→</span>\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WordPractice; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAAyCC,SAAS,QAAQ,kBAAkB;AAC5E,SAASC,QAAQ,QAAQ,yBAAyB;AAClD,SAASC,WAAW,QAAQ,4BAA4B;AACxD,SAASC,WAAW,EAAEC,cAAc,EAAEC,oBAAoB,QAAQ,oBAAoB;AACtF,OAAOC,gBAAgB,MAAoB,oBAAoB;;AAE/D;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,YAAY,GAAG,IAAIC,KAAK,CAAC,qBAAqB,CAAC;AACrD,MAAMC,cAAc,GAAG,IAAID,KAAK,CAAC,uBAAuB,CAAC;AACzD,MAAME,WAAW,GAAG,IAAIF,KAAK,CAAC,oBAAoB,CAAC;AAEnD,MAAMG,YAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAM;IAAEC,KAAK;IAAEC;EAAW,CAAC,GAAGjB,QAAQ,CAAC,CAAC;EACxC,MAAM,CAACkB,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGvB,QAAQ,CAAa,MAAM,CAAC;EAChF,MAAM,CAACwB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGzB,QAAQ,CAAW,MAAM,CAAC;EAC1E,MAAM,CAAC0B,aAAa,EAAEC,gBAAgB,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAAC4B,WAAW,EAAEC,cAAc,CAAC,GAAG7B,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAAC8B,WAAW,EAAEC,cAAc,CAAC,GAAG/B,QAAQ,CAAkB,IAAI,CAAC;EACrE,MAAM,CAACgC,UAAU,EAAEC,aAAa,CAAC,GAAGjC,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACkC,KAAK,EAAEC,QAAQ,CAAC,GAAGnC,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACoC,cAAc,EAAEC,iBAAiB,CAAC,GAAGrC,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM,CAACsC,UAAU,EAAEC,aAAa,CAAC,GAAGvC,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACwC,SAAS,EAAEC,YAAY,CAAC,GAAGzC,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAAC0C,SAAS,EAAEC,YAAY,CAAC,GAAG3C,QAAQ,CAAc,IAAI4C,GAAG,CAAC,CAAC,CAAC;EAClE,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAG9C,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAAC+C,QAAQ,EAAEC,WAAW,CAAC,GAAGhD,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACiD,WAAW,EAAEC,cAAc,CAAC,GAAGlD,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACmD,YAAY,EAAEC,eAAe,CAAC,GAAGpD,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACqD,MAAM,EAAEC,SAAS,CAAC,GAAGtD,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAACuD,WAAW,EAAEC,cAAc,CAAC,GAAGxD,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACyD,QAAQ,EAAEC,WAAW,CAAC,GAAG1D,QAAQ,CAAW,iBAAiB,CAAC;EACrE,MAAM,CAAC2D,OAAO,EAAEC,UAAU,CAAC,GAAG5D,QAAQ,CAAW,EAAE,CAAC;EACpD,MAAM,CAAC6D,eAAe,EAAEC,kBAAkB,CAAC,GAAG9D,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM+D,WAAW,GAAG7D,MAAM,CAAiB,IAAI,CAAC;EAChD,MAAM8D,QAAQ,GAAG9D,MAAM,CAAmB,IAAI,CAAC;EAC/C,MAAM;IAAE+D;EAAe,CAAC,GAAG5D,WAAW,CAAC,CAAC;EAExC,MAAM6D,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,OAAO/D,SAAS,CAACgE,MAAM,CAACC,IAAI,IAAI;MAC9B,MAAMC,iBAAiB,GAAGD,IAAI,CAACE,UAAU,KAAKhD,kBAAkB;MAChE,MAAMiD,eAAe,GAAG/C,gBAAgB,KAAK,KAAK,IAAI4C,IAAI,CAACI,QAAQ,KAAKhD,gBAAgB;MACxF,OAAO6C,iBAAiB,IAAIE,eAAe;IAC7C,CAAC,CAAC;EACJ,CAAC;EAED,MAAME,aAAa,GAAGA,CAAA,KAAM;IAC1B,MAAMC,aAAa,GAAGR,gBAAgB,CAAC,CAAC;IACxC,MAAMS,cAAc,GAAGD,aAAa,CAACP,MAAM,CAACC,IAAI,IAAI,CAAC1B,SAAS,CAACkC,GAAG,CAACR,IAAI,CAACS,QAAQ,CAAC,CAAC;IAElF,IAAIF,cAAc,CAACG,MAAM,KAAK,CAAC,EAAE;MAC/BnC,YAAY,CAAC,IAAIC,GAAG,CAAC,CAAC,CAAC;MACvB,OAAO8B,aAAa,CAACK,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGP,aAAa,CAACI,MAAM,CAAC,CAAC;IACxE;IAEA,OAAOH,cAAc,CAACI,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGN,cAAc,CAACG,MAAM,CAAC,CAAC;EAC1E,CAAC;EAED,MAAMI,eAAe,GAAIC,WAAqB,IAAK;IACjD,MAAMT,aAAa,GAAGR,gBAAgB,CAAC,CAAC;IACxC,MAAMkB,UAAU,GAAGV,aAAa,CAACP,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACS,QAAQ,KAAKM,WAAW,CAACN,QAAQ,CAAC;IACvF,MAAMQ,QAAQ,GAAGD,UAAU,CAACE,IAAI,CAAC,MAAM,GAAG,GAAGP,IAAI,CAACE,MAAM,CAAC,CAAC,CAAC;IAC3D,MAAMM,QAAQ,GAAGF,QAAQ,CAACG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;IACrC,MAAM7B,OAAO,GAAG,CAAC,GAAG4B,QAAQ,CAACE,GAAG,CAACrB,IAAI,IAAIA,IAAI,CAACsB,OAAO,CAAC,EAAEP,WAAW,CAACO,OAAO,CAAC;IAC5E,OAAO/B,OAAO,CAAC2B,IAAI,CAAC,MAAM,GAAG,GAAGP,IAAI,CAACE,MAAM,CAAC,CAAC,CAAC;EAChD,CAAC;EAED,MAAMU,oBAAoB,GAAIrB,UAAsB,IAAa;IAC/D,QAAQA,UAAU;MAChB,KAAK,MAAM;QACT,OAAO,EAAE;MACX,KAAK,QAAQ;QACX,OAAO,EAAE;MACX,KAAK,MAAM;QACT,OAAO,EAAE;MACX;QACE,OAAO,EAAE;IACb;EACF,CAAC;EAED,MAAMsB,kBAAkB,GAAGA,CAACpD,SAAkB,EAAEa,MAAc,KAAa;IACzE,IAAIb,SAAS,EAAE;MACb,IAAIa,MAAM,GAAG,CAAC,EAAE,OAAO,iCAAiC;MACxD,IAAIA,MAAM,GAAG,CAAC,EAAE,OAAO,gCAAgC;MACvD,IAAIA,MAAM,GAAG,CAAC,EAAE,OAAO,uCAAuC;MAC9D,OAAO,uBAAuB;IAChC,CAAC,MAAM;MACL,OAAO,sCAAsC;IAC/C;EACF,CAAC;EAED,MAAMwC,gBAAgB,GAAGA,CAAA,KAAM;IAC7B1D,QAAQ,CAAC,CAAC,CAAC;IACXE,iBAAiB,CAAC,CAAC,CAAC;IACpBE,aAAa,CAAC,KAAK,CAAC;IACpBI,YAAY,CAAC,IAAIC,GAAG,CAAC,CAAC,CAAC;IACvB,MAAMkD,OAAO,GAAGrB,aAAa,CAAC,CAAC;IAC/B1C,cAAc,CAAC+D,OAAO,CAAC;IACvBlC,UAAU,CAACsB,eAAe,CAACY,OAAO,CAAC,CAAC;IACpChD,WAAW,CAAC6C,oBAAoB,CAACrE,kBAAkB,CAAC,CAAC;IACrD0B,WAAW,CAAC,KAAK,CAAC;IAClBE,cAAc,CAAC,IAAI,CAAC;IACpBI,SAAS,CAAC,CAAC,CAAC;IACZQ,kBAAkB,CAAC,EAAE,CAAC;IACtB,IAAIE,QAAQ,CAAC+B,OAAO,EAAE;MACpB/B,QAAQ,CAAC+B,OAAO,CAACC,KAAK,CAAC,CAAC;IAC1B;EACF,CAAC;EAED,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACtBpE,cAAc,CAAC,IAAI,CAAC;IACpBgE,gBAAgB,CAAC,CAAC;EACpB,CAAC;EAED,MAAMK,SAAS,GAAGA,CAAA,KAAM;IACtBrE,cAAc,CAAC,KAAK,CAAC;IACrBM,QAAQ,CAAC,CAAC,CAAC;IACXE,iBAAiB,CAAC,CAAC,CAAC;IACpBE,aAAa,CAAC,KAAK,CAAC;IACpBI,YAAY,CAAC,IAAIC,GAAG,CAAC,CAAC,CAAC;IACvBb,cAAc,CAAC,IAAI,CAAC;IACpBe,WAAW,CAAC,CAAC,CAAC;IACdE,WAAW,CAAC,KAAK,CAAC;IAClBE,cAAc,CAAC,KAAK,CAAC;IACrBI,SAAS,CAAC,CAAC,CAAC;IACZQ,kBAAkB,CAAC,EAAE,CAAC;EACxB,CAAC;EAED,MAAMqC,SAAS,GAAIC,KAAuB,IAAK;IAC7C,IAAIjD,YAAY,EAAE;MAChBiD,KAAK,CAACC,WAAW,GAAG,CAAC;MACrBD,KAAK,CAACE,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,MAAM;QACvBnD,eAAe,CAAC,KAAK,CAAC;MACxB,CAAC,CAAC;IACJ;EACF,CAAC;EAED,MAAMoD,YAAY,GAAIC,MAAc,IAAK;IACvC,IAAI,CAACxD,WAAW,IAAI,CAACnB,WAAW,EAAE;IAElC,MAAM4E,eAAe,GAAGpG,WAAW,CAACmG,MAAM,EAAE3E,WAAW,CAAC4D,OAAO,CAAC;IAChE,MAAMiB,YAAY,GAAGpG,cAAc,CAACmG,eAAe,EAAErD,MAAM,CAAC;IAE5D,IAAIqD,eAAe,EAAE;MACnBP,SAAS,CAACrF,YAAY,CAAC;MACvBwC,SAAS,CAACsD,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;IAC7B,CAAC,MAAM;MACLT,SAAS,CAACnF,cAAc,CAAC;MACzBsC,SAAS,CAAC,CAAC,CAAC;IACd;IAEAnB,QAAQ,CAACyE,IAAI,IAAIA,IAAI,GAAGD,YAAY,CAAC;IACrCtE,iBAAiB,CAACuE,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;IACnCjE,YAAY,CAACiE,IAAI,IAAI,IAAIhE,GAAG,CAAC,CAAC,GAAGgE,IAAI,EAAE9E,WAAW,CAAC+C,QAAQ,CAAC,CAAC,CAAC;IAC9DpC,YAAY,CAACiE,eAAe,CAAC;IAC7BnE,aAAa,CAAC,IAAI,CAAC;IACnBW,cAAc,CAAC,KAAK,CAAC;IACrBY,kBAAkB,CAAC8B,kBAAkB,CAACc,eAAe,EAAErD,MAAM,CAAC,CAAC;IAE/DY,cAAc,CAAC,cAAc,EAAE;MAC7B4C,cAAc,EAAEH,eAAe,GAAIxE,KAAK,GAAG,CAAC,GAAIA,KAAK;MACrD4E,UAAU,EAAE/B,IAAI,CAACgC,GAAG,CAAC1D,MAAM,EAAEA,MAAM,IAAIqD,eAAe,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;MAChEnD,WAAW,EAAE/C,oBAAoB,CAAC+C,WAAW,EAAEnB,cAAc,EAAES,QAAQ;IACzE,CAAC,CAAC;IACFW,cAAc,CAAChD,oBAAoB,CAAC+C,WAAW,EAAEnB,cAAc,EAAES,QAAQ,CAAC,CAAC;EAC7E,CAAC;EAED,MAAMmE,UAAU,GAAGA,CAAA,KAAM;IACvB/E,aAAa,CAAC,EAAE,CAAC;IACjBM,aAAa,CAAC,KAAK,CAAC;IACpB,MAAMuD,OAAO,GAAGrB,aAAa,CAAC,CAAC;IAC/B1C,cAAc,CAAC+D,OAAO,CAAC;IACvBlC,UAAU,CAACsB,eAAe,CAACY,OAAO,CAAC,CAAC;IACpChD,WAAW,CAAC6C,oBAAoB,CAACrE,kBAAkB,CAAC,CAAC;IACrD0B,WAAW,CAAC,KAAK,CAAC;IAClBE,cAAc,CAAC,IAAI,CAAC;IACpBY,kBAAkB,CAAC,EAAE,CAAC;IACtB,IAAIE,QAAQ,CAAC+B,OAAO,EAAE;MACpB/B,QAAQ,CAAC+B,OAAO,CAACC,KAAK,CAAC,CAAC;IAC1B;EACF,CAAC;EAED/F,SAAS,CAAC,MAAM;IACd4F,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,CAACvE,kBAAkB,EAAEE,gBAAgB,EAAEiC,QAAQ,CAAC,CAAC;EAEpDxD,SAAS,CAAC,MAAM;IACd,IAAIgH,KAAqB;IACzB,IAAIhE,WAAW,IAAIJ,QAAQ,GAAG,CAAC,EAAE;MAC/BoE,KAAK,GAAGC,WAAW,CAAC,MAAM;QACxBpE,WAAW,CAAC8D,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;MAC/B,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,MAAM,IAAI/D,QAAQ,KAAK,CAAC,IAAI,CAACP,UAAU,EAAE;MACxC6D,SAAS,CAAClF,WAAW,CAAC;MACtBuF,YAAY,CAAC,EAAE,CAAC;IAClB;IACA,OAAO,MAAMW,aAAa,CAACF,KAAK,CAAC;EACnC,CAAC,EAAE,CAACpE,QAAQ,EAAEI,WAAW,CAAC,CAAC;EAE3BhD,SAAS,CAAC,MAAM;IACd,IAAI8D,WAAW,CAACgC,OAAO,EAAE;MACvB,MAAMqB,OAAO,GAAGzB,oBAAoB,CAACrE,kBAAkB,CAAC;MACxD,MAAM+F,QAAQ,GAAIxE,QAAQ,GAAGuE,OAAO,GAAI,GAAG;MAC3CrD,WAAW,CAACgC,OAAO,CAACuB,KAAK,CAACC,KAAK,GAAG,GAAGF,QAAQ,GAAG;IAClD;EACF,CAAC,EAAE,CAACxE,QAAQ,EAAEvB,kBAAkB,CAAC,CAAC;EAElC,MAAMkG,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAInG,UAAU,EAAE;MACd,OAAO;QACLoG,SAAS,EAAE,cAAc;QACzBC,IAAI,EAAE,gBAAgB;QACtBC,KAAK,EAAE,8CAA8C;QACrDC,MAAM,EAAE;UACNC,OAAO,EAAE,6CAA6C;UACtDC,SAAS,EAAE,iDAAiD;UAC5DC,IAAI,EAAE,8CAA8C;UACpDC,QAAQ,EAAE;QACZ,CAAC;QACDD,IAAI,EAAE,uDAAuD;QAC7DE,MAAM,EAAE;UACNC,OAAO,EAAE,oDAAoD;UAC7DC,SAAS,EAAE;QACb;MACF,CAAC;IACH;IAEA,QAAQ/G,KAAK;MACX,KAAK,MAAM;QACT,OAAO;UACLqG,SAAS,EAAE,cAAc;UACzBC,IAAI,EAAE,gBAAgB;UACtBC,KAAK,EAAE,4CAA4C;UACnDC,MAAM,EAAE;YACNC,OAAO,EAAE,6CAA6C;YACtDC,SAAS,EAAE,iDAAiD;YAC5DC,IAAI,EAAE,8CAA8C;YACpDC,QAAQ,EAAE;UACZ,CAAC;UACDD,IAAI,EAAE,gDAAgD;UACtDE,MAAM,EAAE;YACNC,OAAO,EAAE,6CAA6C;YACtDC,SAAS,EAAE;UACb;QACF,CAAC;MACH,KAAK,OAAO;QACV,OAAO;UACLV,SAAS,EAAE,eAAe;UAC1BC,IAAI,EAAE,iBAAiB;UACvBC,KAAK,EAAE,8CAA8C;UACrDC,MAAM,EAAE;YACNC,OAAO,EAAE,6CAA6C;YACtDC,SAAS,EAAE,iDAAiD;YAC5DC,IAAI,EAAE,8CAA8C;YACpDC,QAAQ,EAAE;UACZ,CAAC;UACDD,IAAI,EAAE,gDAAgD;UACtDE,MAAM,EAAE;YACNC,OAAO,EAAE,6CAA6C;YACtDC,SAAS,EAAE;UACb;QACF,CAAC;MACH;QACE,OAAO;UACLV,SAAS,EAAE,UAAU;UACrBC,IAAI,EAAE,eAAe;UACrBC,KAAK,EAAE,wCAAwC;UAC/CC,MAAM,EAAE;YACNC,OAAO,EAAE,6CAA6C;YACtDC,SAAS,EAAE,iDAAiD;YAC5DC,IAAI,EAAE,8CAA8C;YACpDC,QAAQ,EAAE;UACZ,CAAC;UACDD,IAAI,EAAE,gDAAgD;UACtDE,MAAM,EAAE;YACNC,OAAO,EAAE,6CAA6C;YACtDC,SAAS,EAAE;UACb;QACF,CAAC;IACL;EACF,CAAC;EAED,MAAMC,YAAY,GAAGZ,eAAe,CAAC,CAAC;EAEtC,oBACE7G,OAAA;IAAK0H,SAAS,EAAC,mBAAmB;IAAAC,QAAA,EAC/B,CAAC1G,WAAW,gBACXjB,OAAA;MAAK0H,SAAS,EAAE,GAAGD,YAAY,CAACX,SAAS,2BAA4B;MAAAa,QAAA,gBACnE3H,OAAA;QAAI0H,SAAS,EAAE,2BAA2BD,YAAY,CAACV,IAAI,EAAG;QAAAY,QAAA,EAAC;MAE/D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAEL/H,OAAA;QAAK0H,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACxB3H,OAAA;UAAA2H,QAAA,gBACE3H,OAAA;YAAO0H,SAAS,EAAE,cAAcD,YAAY,CAACV,IAAI,EAAG;YAAAY,QAAA,EAAC;UAAiB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC9E/H,OAAA;YACEgI,KAAK,EAAErH,kBAAmB;YAC1BsH,QAAQ,EAAGC,CAAC,IAAKtH,qBAAqB,CAACsH,CAAC,CAACC,MAAM,CAACH,KAAmB,CAAE;YACrEN,SAAS,EAAE,gCAAgCD,YAAY,CAACT,KAAK,uDAAwD;YAAAW,QAAA,gBAErH3H,OAAA;cAAQgI,KAAK,EAAC,MAAM;cAAAL,QAAA,EAAC;YAAI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAClC/H,OAAA;cAAQgI,KAAK,EAAC,QAAQ;cAAAL,QAAA,EAAC;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACtC/H,OAAA;cAAQgI,KAAK,EAAC,MAAM;cAAAL,QAAA,EAAC;YAAI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eAEN/H,OAAA;UAAA2H,QAAA,gBACE3H,OAAA;YAAO0H,SAAS,EAAE,cAAcD,YAAY,CAACV,IAAI,EAAG;YAAAY,QAAA,EAAC;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACtE/H,OAAA;YACEgI,KAAK,EAAEnH,gBAAiB;YACxBoH,QAAQ,EAAGC,CAAC,IAAKpH,mBAAmB,CAACoH,CAAC,CAACC,MAAM,CAACH,KAAiB,CAAE;YACjEN,SAAS,EAAE,gCAAgCD,YAAY,CAACT,KAAK,uDAAwD;YAAAW,QAAA,gBAErH3H,OAAA;cAAQgI,KAAK,EAAC,MAAM;cAAAL,QAAA,EAAC;YAAI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAClC/H,OAAA;cAAQgI,KAAK,EAAC,SAAS;cAAAL,QAAA,EAAC;YAAO;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACxC/H,OAAA;cAAQgI,KAAK,EAAC,QAAQ;cAAAL,QAAA,EAAC;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACtC/H,OAAA;cAAQgI,KAAK,EAAC,SAAS;cAAAL,QAAA,EAAC;YAAO;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACxC/H,OAAA;cAAQgI,KAAK,EAAC,KAAK;cAAAL,QAAA,EAAC;YAAc;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eAEN/H,OAAA;UAAA2H,QAAA,gBACE3H,OAAA;YAAO0H,SAAS,EAAE,cAAcD,YAAY,CAACV,IAAI,EAAG;YAAAY,QAAA,EAAC;UAAoB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACjF/H,OAAA;YACEgI,KAAK,EAAEjH,aAAc;YACrBkH,QAAQ,EAAGC,CAAC,IAAKlH,gBAAgB,CAACoH,MAAM,CAACF,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC,CAAE;YAC1DN,SAAS,EAAE,gCAAgCD,YAAY,CAACT,KAAK,uDAAwD;YAAAW,QAAA,gBAErH3H,OAAA;cAAQgI,KAAK,EAAC,GAAG;cAAAL,QAAA,EAAC;YAAW;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACtC/H,OAAA;cAAQgI,KAAK,EAAC,IAAI;cAAAL,QAAA,EAAC;YAAY;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACxC/H,OAAA;cAAQgI,KAAK,EAAC,IAAI;cAAAL,QAAA,EAAC;YAAY;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACxC/H,OAAA;cAAQgI,KAAK,EAAC,IAAI;cAAAL,QAAA,EAAC;YAAY;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eAEN/H,OAAA;UACEqI,OAAO,EAAE/C,SAAU;UACnBoC,SAAS,EAAE,UAAUD,YAAY,CAACR,MAAM,CAACC,OAAO,oCAAqC;UAAAS,QAAA,EACtF;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,gBAEN/H,OAAA,CAAAE,SAAA;MAAAyH,QAAA,gBACE3H,OAAA,CAACF,gBAAgB;QACfwI,YAAY,EAAExF,QAAS;QACvByF,YAAY,EAAExF,WAAY;QAC1ByF,cAAc,EAAE,CAAC,iBAAiB,EAAE,SAAS,EAAE,YAAY;MAAE;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9D,CAAC,eAEF/H,OAAA;QAAK0H,SAAS,EAAE,QAAQD,YAAY,CAACX,SAAS,2BAA4B;QAAAa,QAAA,gBACxE3H,OAAA;UAAK0H,SAAS,EAAC,2BAA2B;UAAAC,QAAA,gBACxC3H,OAAA;YACEqI,OAAO,EAAE9C,SAAU;YACnBmC,SAAS,EAAE,oCAAoCD,YAAY,CAACR,MAAM,CAACE,SAAS,EAAG;YAAAQ,QAAA,EAChF;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAET/H,OAAA;YACEqI,OAAO,EAAEA,CAAA,KAAM5F,eAAe,CAAC,CAACD,YAAY,CAAE;YAC9CkF,SAAS,EAAE,oCACTlF,YAAY,GAAG,iCAAiC,GAAG,6BAA6B,aACpE;YAAAmF,QAAA,EAEbnF,YAAY,GAAG,IAAI,GAAG;UAAI;YAAAoF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eAEN/H,OAAA;UAAK0H,SAAS,EAAC,wCAAwC;UAAAC,QAAA,gBACrD3H,OAAA;YAAK0H,SAAS,EAAE,yBAAyBD,YAAY,CAACV,IAAI,EAAG;YAAAY,QAAA,GAAC,SACrD,EAACpG,KAAK,EAAC,GAAC,EAACE,cAAc,EAC7BiB,MAAM,GAAG,CAAC,iBACT1C,OAAA;cAAM0H,SAAS,EAAC,sBAAsB;cAAAC,QAAA,GAAC,eAClC,EAACjF,MAAM,EAAC,UACb;YAAA;cAAAkF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CACP;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eACN/H,OAAA;YAAK0H,SAAS,EAAE,yBAAyBxF,QAAQ,IAAI,EAAE,GAAG,4BAA4B,GAAGuF,YAAY,CAACV,IAAI,EAAG;YAAAY,QAAA,GAAC,QACtG,EAACzF,QAAQ,EAAC,GAClB;UAAA;YAAA0F,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAEN/H,OAAA;UAAK0H,SAAS,EAAC,yEAAyE;UAAAC,QAAA,eACtF3H,OAAA;YACEyI,GAAG,EAAErF,WAAY;YACjBsE,SAAS,EAAE,uCACTxF,QAAQ,IAAI,EAAE,GAAG,YAAY,GAAG,YAAY,EAC3C;YACHyE,KAAK,EAAE;cAAEC,KAAK,EAAE;YAAO;UAAE;YAAAgB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1B;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,EAEL5G,WAAW,iBACVnB,OAAA;QAAK0H,SAAS,EAAE,GAAGD,YAAY,CAACX,SAAS,iFAAkF;QAAAa,QAAA,gBACzH3H,OAAA;UAAK0H,SAAS,EAAE,uCAAuCD,YAAY,CAACV,IAAI,EAAG;UAAAY,QAAA,EACxExG,WAAW,CAAC+C;QAAQ;UAAA0D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB,CAAC,EACLpH,kBAAkB,KAAK,MAAM,iBAC5BX,OAAA;UAAK0H,SAAS,EAAE,4BAA4BD,YAAY,CAACV,IAAI,aAAc;UAAAY,QAAA,EACxExG,WAAW,CAACuH;QAAM;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChB,CACN,EAEA,CAAC3F,QAAQ,IAAI,CAACT,UAAU,iBACvB3B,OAAA;UACEqI,OAAO,EAAEA,CAAA,KAAMhG,WAAW,CAAC,IAAI,CAAE;UACjCqF,SAAS,EAAE,eAAeD,YAAY,CAACR,MAAM,CAACG,IAAI,oCAAqC;UAAAO,QAAA,EACxF;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CACT,EAEA3F,QAAQ,IAAI,CAACT,UAAU,iBACtB3B,OAAA;UAAK0H,SAAS,EAAE,uBAAuBD,YAAY,CAACL,IAAI,EAAG;UAAAO,QAAA,eACzD3H,OAAA;YAAA2H,QAAA,EAAIxG,WAAW,CAACiG;UAAI;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtB,CACN,EAEAjF,QAAQ,KAAK,iBAAiB,IAAI,CAACnB,UAAU,iBAC5C3B,OAAA;UAAK0H,SAAS,EAAC,wBAAwB;UAAAC,QAAA,EACpC3E,OAAO,CAAC8B,GAAG,CAAC,CAAC6D,MAAM,EAAEC,KAAK,kBACzB5I,OAAA;YAEEqI,OAAO,EAAEA,CAAA,KAAMxC,YAAY,CAAC8C,MAAM,CAAE;YACpCjB,SAAS,EAAE,8CACTD,YAAY,CAACR,MAAM,CAACI,QAAQ,EAC3B;YAAAM,QAAA,EAEFgB;UAAM,GANFC,KAAK;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAOJ,CACT;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CACN,EAEAjF,QAAQ,KAAK,SAAS,IAAI,CAACnB,UAAU,iBACpC3B,OAAA;UAAM6I,QAAQ,EAAGX,CAAC,IAAK;YAAEA,CAAC,CAACY,cAAc,CAAC,CAAC;YAAEjD,YAAY,CAACxE,UAAU,CAAC;UAAE,CAAE;UAACqG,SAAS,EAAC,WAAW;UAAAC,QAAA,gBAC7F3H,OAAA;YACEyI,GAAG,EAAEpF,QAAS;YACd0F,IAAI,EAAC,MAAM;YACXf,KAAK,EAAE3G,UAAW;YAClB4G,QAAQ,EAAGC,CAAC,IAAK5G,aAAa,CAAC4G,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;YAC/CgB,WAAW,EAAC,8BAA8B;YAC1CtB,SAAS,EAAE,gCAAgCD,YAAY,CAACT,KAAK,uDAAwD;YACrHiC,QAAQ,EAAEtH;UAAW;YAAAiG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtB,CAAC,eAEF/H,OAAA;YACE+I,IAAI,EAAC,QAAQ;YACbrB,SAAS,EAAE,UAAUD,YAAY,CAACR,MAAM,CAACC,OAAO,oCAAqC;YAAAS,QAAA,EACtF;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CACP,EAEApG,UAAU,iBACT3B,OAAA;UAAK0H,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxB3H,OAAA;YAAK0H,SAAS,EAAE,8BACd7F,SAAS,GAAG4F,YAAY,CAACH,MAAM,CAACC,OAAO,GAAGE,YAAY,CAACH,MAAM,CAACE,SAAS,EACtE;YAAAG,QAAA,gBACD3H,OAAA;cAAK0H,SAAS,EAAC,eAAe;cAAAC,QAAA,EAC3B9F,SAAS,GAAG,IAAI,GAAG;YAAI;cAAA+F,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrB,CAAC,eACN/H,OAAA;cAAK0H,SAAS,EAAC,wBAAwB;cAAAC,QAAA,EACpC9F,SAAS,GAAG,UAAU,GAAG;YAAW;cAAA+F,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClC,CAAC,eACN/H,OAAA;cAAK0H,SAAS,EAAC,MAAM;cAAAC,QAAA,EAClBzE;YAAe;cAAA0E,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACb,CAAC,eACN/H,OAAA;cAAK0H,SAAS,EAAC,oBAAoB;cAAAC,QAAA,EAChC,CAAC9F,SAAS,IAAI,0BAA0BV,WAAW,CAAC4D,OAAO;YAAE;cAAA6C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC3D,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eACN/H,OAAA;YACEqI,OAAO,EAAEhC,UAAW;YACpBqB,SAAS,EAAE,UAAUD,YAAY,CAACR,MAAM,CAACE,SAAS,2EAA4E;YAAAQ,QAAA,gBAE9H3H,OAAA;cAAA2H,QAAA,EAAM;YAAa;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAC1B/H,OAAA;cAAA2H,QAAA,EAAM;YAAC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACR,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CACN;IAAA,eACD;EACH;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACvH,EAAA,CA/dID,YAAsB;EAAA,QACId,QAAQ,EAuBXC,WAAW;AAAA;AAAAwJ,EAAA,GAxBlC3I,YAAsB;AAie5B,eAAeA,YAAY;AAAC,IAAA2I,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}