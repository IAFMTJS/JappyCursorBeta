{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\siebe\\\\Cursor\\\\JapVoc by section\\\\src\\\\components\\\\WordPractice.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { quizWords } from '../data/quizData';\nimport { useTheme } from '../context/ThemeContext';\nimport { useProgress } from '../context/ProgressContext';\nimport { checkAnswer, calculateScore, calculateAverageTime } from '../utils/quizUtils';\nimport QuizModeSelector from './QuizModeSelector';\n\n// Sound effects\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst correctSound = new Audio('/sounds/correct.mp3');\nconst incorrectSound = new Audio('/sounds/incorrect.mp3');\nconst timeUpSound = new Audio('/sounds/timeup.mp3');\nconst WordPractice = () => {\n  _s();\n  const {\n    theme,\n    isDarkMode\n  } = useTheme();\n  const [selectedDifficulty, setSelectedDifficulty] = useState('easy');\n  const [selectedCategory, setSelectedCategory] = useState('food');\n  const [currentWord, setCurrentWord] = useState(null);\n  const [userAnswer, setUserAnswer] = useState('');\n  const [score, setScore] = useState(0);\n  const [totalQuestions, setTotalQuestions] = useState(0);\n  const [showResult, setShowResult] = useState(false);\n  const [isCorrect, setIsCorrect] = useState(false);\n  const [usedWords, setUsedWords] = useState(new Set());\n  const [timeLeft, setTimeLeft] = useState(30);\n  const [showHint, setShowHint] = useState(false);\n  const [timerActive, setTimerActive] = useState(true);\n  const [soundEnabled, setSoundEnabled] = useState(true);\n  const [streak, setStreak] = useState(0);\n  const [averageTime, setAverageTime] = useState(0);\n  const [quizMode, setQuizMode] = useState('multiple-choice');\n  const [options, setOptions] = useState([]);\n  const progressRef = useRef(null);\n  const inputRef = useRef(null);\n  const {\n    updateProgress\n  } = useProgress();\n  const getFilteredWords = () => {\n    return quizWords.filter(word => {\n      const matchesDifficulty = word.difficulty === selectedDifficulty;\n      const matchesCategory = selectedCategory === 'all' || word.category === selectedCategory;\n      return matchesDifficulty && matchesCategory;\n    });\n  };\n  const getRandomWord = () => {\n    const filteredWords = getFilteredWords();\n    const availableWords = filteredWords.filter(word => !usedWords.has(word.japanese));\n    if (availableWords.length === 0) {\n      setUsedWords(new Set());\n      return filteredWords[Math.floor(Math.random() * filteredWords.length)];\n    }\n    return availableWords[Math.floor(Math.random() * availableWords.length)];\n  };\n  const generateOptions = correctWord => {\n    const filteredWords = getFilteredWords();\n    const otherWords = filteredWords.filter(word => word.japanese !== correctWord.japanese);\n    const shuffled = otherWords.sort(() => 0.5 - Math.random());\n    const selected = shuffled.slice(0, 3);\n    const options = [...selected.map(word => word.english), correctWord.english];\n    return options.sort(() => 0.5 - Math.random());\n  };\n  const startNewPractice = () => {\n    setScore(0);\n    setTotalQuestions(0);\n    setShowResult(false);\n    setUsedWords(new Set());\n    const newWord = getRandomWord();\n    setCurrentWord(newWord);\n    setOptions(generateOptions(newWord));\n    setTimeLeft(30);\n    setShowHint(false);\n    setTimerActive(true);\n    setStreak(0);\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  };\n  const playSound = sound => {\n    if (soundEnabled) {\n      sound.currentTime = 0;\n      sound.play().catch(() => {\n        setSoundEnabled(false);\n      });\n    }\n  };\n  const handleAnswer = answer => {\n    if (!timerActive || !currentWord) return;\n    const isAnswerCorrect = checkAnswer(answer, currentWord.english);\n    const pointsEarned = calculateScore(isAnswerCorrect, streak);\n    if (isAnswerCorrect) {\n      correctSound.play();\n      setStreak(prev => prev + 1);\n    } else {\n      incorrectSound.play();\n      setStreak(0);\n    }\n    setScore(prev => prev + pointsEarned);\n    setTotalQuestions(prev => prev + 1);\n    setUsedWords(prev => new Set([...prev, currentWord.japanese]));\n    setIsCorrect(isAnswerCorrect);\n    setShowResult(true);\n    setTimerActive(false);\n    updateProgress('wordPractice', {\n      correctAnswers: isAnswerCorrect ? score + 1 : score,\n      bestStreak: Math.max(streak, streak + (isAnswerCorrect ? 1 : 0)),\n      averageTime: calculateAverageTime(averageTime, totalQuestions, timeLeft)\n    });\n    setAverageTime(calculateAverageTime(averageTime, totalQuestions, timeLeft));\n  };\n  const handleNext = () => {\n    setUserAnswer('');\n    setShowResult(false);\n    const newWord = getRandomWord();\n    setCurrentWord(newWord);\n    setOptions(generateOptions(newWord));\n    setTimeLeft(30);\n    setShowHint(false);\n    setTimerActive(true);\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  };\n  useEffect(() => {\n    startNewPractice();\n  }, [selectedDifficulty, selectedCategory, quizMode]);\n  useEffect(() => {\n    let timer;\n    if (timerActive && timeLeft > 0) {\n      timer = setInterval(() => {\n        setTimeLeft(prev => prev - 1);\n      }, 1000);\n    } else if (timeLeft === 0 && !showResult) {\n      playSound(timeUpSound);\n      handleAnswer('');\n    }\n    return () => clearInterval(timer);\n  }, [timeLeft, timerActive]);\n  useEffect(() => {\n    if (progressRef.current) {\n      const progress = timeLeft / 30 * 100;\n      progressRef.current.style.width = `${progress}%`;\n    }\n  }, [timeLeft]);\n  const getThemeClasses = () => {\n    if (isDarkMode) {\n      return {\n        container: 'bg-dark-card',\n        text: 'text-dark-text',\n        input: 'bg-dark-bg border-dark-border text-dark-text',\n        button: {\n          primary: 'bg-primary hover:bg-primary-dark text-white',\n          secondary: 'bg-secondary hover:bg-secondary-dark text-white',\n          hint: 'bg-yellow-500 hover:bg-yellow-600 text-white'\n        },\n        hint: 'bg-yellow-900/20 border-yellow-800/30 text-yellow-200',\n        result: {\n          correct: 'bg-green-900/20 border-green-800/30 text-green-200',\n          incorrect: 'bg-red-900/20 border-red-800/30 text-red-200'\n        }\n      };\n    }\n    switch (theme) {\n      case 'blue':\n        return {\n          container: 'bg-blue-card',\n          text: 'text-blue-text',\n          input: 'bg-white border-blue-border text-blue-text',\n          button: {\n            primary: 'bg-primary hover:bg-primary-dark text-white',\n            secondary: 'bg-secondary hover:bg-secondary-dark text-white',\n            hint: 'bg-yellow-500 hover:bg-yellow-600 text-white'\n          },\n          hint: 'bg-yellow-50 border-yellow-200 text-yellow-800',\n          result: {\n            correct: 'bg-green-50 border-green-200 text-green-800',\n            incorrect: 'bg-red-50 border-red-200 text-red-800'\n          }\n        };\n      case 'green':\n        return {\n          container: 'bg-green-card',\n          text: 'text-green-text',\n          input: 'bg-white border-green-border text-green-text',\n          button: {\n            primary: 'bg-primary hover:bg-primary-dark text-white',\n            secondary: 'bg-secondary hover:bg-secondary-dark text-white',\n            hint: 'bg-yellow-500 hover:bg-yellow-600 text-white'\n          },\n          hint: 'bg-yellow-50 border-yellow-200 text-yellow-800',\n          result: {\n            correct: 'bg-green-50 border-green-200 text-green-800',\n            incorrect: 'bg-red-50 border-red-200 text-red-800'\n          }\n        };\n      default:\n        return {\n          container: 'bg-white',\n          text: 'text-gray-800',\n          input: 'bg-white border-gray-200 text-gray-800',\n          button: {\n            primary: 'bg-primary hover:bg-primary-dark text-white',\n            secondary: 'bg-secondary hover:bg-secondary-dark text-white',\n            hint: 'bg-yellow-500 hover:bg-yellow-600 text-white'\n          },\n          hint: 'bg-yellow-50 border-yellow-200 text-yellow-800',\n          result: {\n            correct: 'bg-green-50 border-green-200 text-green-800',\n            incorrect: 'bg-red-50 border-red-200 text-red-800'\n          }\n        };\n    }\n  };\n  const themeClasses = getThemeClasses();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-2xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(QuizModeSelector, {\n      selectedMode: quizMode,\n      onModeSelect: setQuizMode,\n      availableModes: ['multiple-choice', 'writing', 'flashcards']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `mb-8 ${themeClasses.container} rounded-lg shadow-md p-6`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap gap-4 mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedDifficulty,\n          onChange: e => setSelectedDifficulty(e.target.value),\n          className: `flex-1 p-3 border rounded-lg ${themeClasses.input} focus:ring-2 focus:ring-primary focus:border-primary`,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"easy\",\n            children: \"Easy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"medium\",\n            children: \"Medium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"hard\",\n            children: \"Hard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedCategory,\n          onChange: e => setSelectedCategory(e.target.value),\n          className: `flex-1 p-3 border rounded-lg ${themeClasses.input} focus:ring-2 focus:ring-primary focus:border-primary`,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"food\",\n            children: \"Food\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"animals\",\n            children: \"Animals\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"colors\",\n            children: \"Colors\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"numbers\",\n            children: \"Numbers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"all\",\n            children: \"All Categories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSoundEnabled(!soundEnabled),\n          className: `p-3 rounded-lg transition-colors ${soundEnabled ? 'bg-green-500 hover:bg-green-600' : 'bg-red-500 hover:bg-red-600'} text-white`,\n          children: soundEnabled ? '🔊' : '🔇'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `text-lg font-semibold ${themeClasses.text}`,\n          children: [\"Score: \", score, \"/\", totalQuestions, streak > 2 && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-2 text-yellow-500\",\n            children: [\"\\uD83D\\uDD25 \", streak, \" streak!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `text-lg font-semibold ${timeLeft <= 10 ? 'text-red-500 animate-pulse' : themeClasses.text}`,\n          children: [\"Time: \", timeLeft, \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full h-2 bg-gray-200 dark:bg-dark-border rounded-full overflow-hidden\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: progressRef,\n          className: `h-full transition-all duration-1000 ${timeLeft <= 10 ? 'bg-red-500' : 'bg-primary'}`,\n          style: {\n            width: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), currentWord && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${themeClasses.container} rounded-lg shadow-md p-6 transform transition-all duration-300 hover:shadow-lg`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `text-3xl font-bold text-center mb-4 ${themeClasses.text}`,\n        children: currentWord.japanese\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 11\n      }, this), !showHint && !showResult && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowHint(true),\n        className: `w-full mb-6 ${themeClasses.button.hint} py-3 rounded-lg transition-colors`,\n        children: \"Show Hint\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 13\n      }, this), showHint && !showResult && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `mb-6 p-4 rounded-lg ${themeClasses.hint}`,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: currentWord.hint\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 13\n      }, this), quizMode === 'multiple-choice' && !showResult && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 gap-3\",\n        children: options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAnswer(option),\n          className: `p-4 rounded-lg text-left transition-colors ${themeClasses.button.inactive}`,\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 13\n      }, this), quizMode === 'writing' && !showResult && /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          handleAnswer(userAnswer);\n        },\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ref: inputRef,\n          type: \"text\",\n          value: userAnswer,\n          onChange: e => setUserAnswer(e.target.value),\n          placeholder: \"Type the English translation\",\n          className: `w-full p-3 border rounded-lg ${themeClasses.input} focus:ring-2 focus:ring-primary focus:border-primary`,\n          disabled: showResult\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: `w-full ${themeClasses.button.primary} py-3 rounded-lg transition-colors`,\n          children: \"Check Answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 13\n      }, this), showResult && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `text-center p-4 rounded-lg ${isCorrect ? themeClasses.result.correct : themeClasses.result.incorrect}`,\n          children: isCorrect ? 'Correct! 🎉' : `Incorrect. The answer is: ${currentWord.english}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNext,\n          className: `w-full ${themeClasses.button.secondary} py-3 rounded-lg transition-colors`,\n          children: \"Next Word\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 232,\n    columnNumber: 5\n  }, this);\n};\n_s(WordPractice, \"RjDFAtiVgnBK2VoVJ/e+3Zm4/Yo=\", false, function () {\n  return [useTheme, useProgress];\n});\n_c = WordPractice;\nexport default WordPractice;\nvar _c;\n$RefreshReg$(_c, \"WordPractice\");","map":{"version":3,"names":["React","useState","useEffect","useRef","quizWords","useTheme","useProgress","checkAnswer","calculateScore","calculateAverageTime","QuizModeSelector","jsxDEV","_jsxDEV","correctSound","Audio","incorrectSound","timeUpSound","WordPractice","_s","theme","isDarkMode","selectedDifficulty","setSelectedDifficulty","selectedCategory","setSelectedCategory","currentWord","setCurrentWord","userAnswer","setUserAnswer","score","setScore","totalQuestions","setTotalQuestions","showResult","setShowResult","isCorrect","setIsCorrect","usedWords","setUsedWords","Set","timeLeft","setTimeLeft","showHint","setShowHint","timerActive","setTimerActive","soundEnabled","setSoundEnabled","streak","setStreak","averageTime","setAverageTime","quizMode","setQuizMode","options","setOptions","progressRef","inputRef","updateProgress","getFilteredWords","filter","word","matchesDifficulty","difficulty","matchesCategory","category","getRandomWord","filteredWords","availableWords","has","japanese","length","Math","floor","random","generateOptions","correctWord","otherWords","shuffled","sort","selected","slice","map","english","startNewPractice","newWord","current","focus","playSound","sound","currentTime","play","catch","handleAnswer","answer","isAnswerCorrect","pointsEarned","prev","correctAnswers","bestStreak","max","handleNext","timer","setInterval","clearInterval","progress","style","width","getThemeClasses","container","text","input","button","primary","secondary","hint","result","correct","incorrect","themeClasses","className","children","selectedMode","onModeSelect","availableModes","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","onClick","ref","option","index","inactive","onSubmit","preventDefault","type","placeholder","disabled","_c","$RefreshReg$"],"sources":["C:/Users/siebe/Cursor/JapVoc by section/src/components/WordPractice.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { QuizWord, Difficulty, Category, quizWords } from '../data/quizData';\r\nimport { useTheme } from '../context/ThemeContext';\r\nimport { useProgress } from '../context/ProgressContext';\r\nimport { checkAnswer, calculateScore, calculateAverageTime } from '../utils/quizUtils';\r\nimport QuizModeSelector, { QuizMode } from './QuizModeSelector';\r\n\r\n// Sound effects\r\nconst correctSound = new Audio('/sounds/correct.mp3');\r\nconst incorrectSound = new Audio('/sounds/incorrect.mp3');\r\nconst timeUpSound = new Audio('/sounds/timeup.mp3');\r\n\r\nconst WordPractice: React.FC = () => {\r\n  const { theme, isDarkMode } = useTheme();\r\n  const [selectedDifficulty, setSelectedDifficulty] = useState<Difficulty>('easy');\r\n  const [selectedCategory, setSelectedCategory] = useState<Category>('food');\r\n  const [currentWord, setCurrentWord] = useState<QuizWord | null>(null);\r\n  const [userAnswer, setUserAnswer] = useState('');\r\n  const [score, setScore] = useState(0);\r\n  const [totalQuestions, setTotalQuestions] = useState(0);\r\n  const [showResult, setShowResult] = useState(false);\r\n  const [isCorrect, setIsCorrect] = useState(false);\r\n  const [usedWords, setUsedWords] = useState<Set<string>>(new Set());\r\n  const [timeLeft, setTimeLeft] = useState(30);\r\n  const [showHint, setShowHint] = useState(false);\r\n  const [timerActive, setTimerActive] = useState(true);\r\n  const [soundEnabled, setSoundEnabled] = useState(true);\r\n  const [streak, setStreak] = useState(0);\r\n  const [averageTime, setAverageTime] = useState(0);\r\n  const [quizMode, setQuizMode] = useState<QuizMode>('multiple-choice');\r\n  const [options, setOptions] = useState<string[]>([]);\r\n  const progressRef = useRef<HTMLDivElement>(null);\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n  const { updateProgress } = useProgress();\r\n\r\n  const getFilteredWords = () => {\r\n    return quizWords.filter(word => {\r\n      const matchesDifficulty = word.difficulty === selectedDifficulty;\r\n      const matchesCategory = selectedCategory === 'all' || word.category === selectedCategory;\r\n      return matchesDifficulty && matchesCategory;\r\n    });\r\n  };\r\n\r\n  const getRandomWord = () => {\r\n    const filteredWords = getFilteredWords();\r\n    const availableWords = filteredWords.filter(word => !usedWords.has(word.japanese));\r\n    \r\n    if (availableWords.length === 0) {\r\n      setUsedWords(new Set());\r\n      return filteredWords[Math.floor(Math.random() * filteredWords.length)];\r\n    }\r\n    \r\n    return availableWords[Math.floor(Math.random() * availableWords.length)];\r\n  };\r\n\r\n  const generateOptions = (correctWord: QuizWord) => {\r\n    const filteredWords = getFilteredWords();\r\n    const otherWords = filteredWords.filter(word => word.japanese !== correctWord.japanese);\r\n    const shuffled = otherWords.sort(() => 0.5 - Math.random());\r\n    const selected = shuffled.slice(0, 3);\r\n    const options = [...selected.map(word => word.english), correctWord.english];\r\n    return options.sort(() => 0.5 - Math.random());\r\n  };\r\n\r\n  const startNewPractice = () => {\r\n    setScore(0);\r\n    setTotalQuestions(0);\r\n    setShowResult(false);\r\n    setUsedWords(new Set());\r\n    const newWord = getRandomWord();\r\n    setCurrentWord(newWord);\r\n    setOptions(generateOptions(newWord));\r\n    setTimeLeft(30);\r\n    setShowHint(false);\r\n    setTimerActive(true);\r\n    setStreak(0);\r\n    if (inputRef.current) {\r\n      inputRef.current.focus();\r\n    }\r\n  };\r\n\r\n  const playSound = (sound: HTMLAudioElement) => {\r\n    if (soundEnabled) {\r\n      sound.currentTime = 0;\r\n      sound.play().catch(() => {\r\n        setSoundEnabled(false);\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleAnswer = (answer: string) => {\r\n    if (!timerActive || !currentWord) return;\r\n\r\n    const isAnswerCorrect = checkAnswer(answer, currentWord.english);\r\n    const pointsEarned = calculateScore(isAnswerCorrect, streak);\r\n\r\n    if (isAnswerCorrect) {\r\n      correctSound.play();\r\n      setStreak(prev => prev + 1);\r\n    } else {\r\n      incorrectSound.play();\r\n      setStreak(0);\r\n    }\r\n\r\n    setScore(prev => prev + pointsEarned);\r\n    setTotalQuestions(prev => prev + 1);\r\n    setUsedWords(prev => new Set([...prev, currentWord.japanese]));\r\n    setIsCorrect(isAnswerCorrect);\r\n    setShowResult(true);\r\n    setTimerActive(false);\r\n\r\n    updateProgress('wordPractice', {\r\n      correctAnswers: isAnswerCorrect ? (score + 1) : score,\r\n      bestStreak: Math.max(streak, streak + (isAnswerCorrect ? 1 : 0)),\r\n      averageTime: calculateAverageTime(averageTime, totalQuestions, timeLeft)\r\n    });\r\n    setAverageTime(calculateAverageTime(averageTime, totalQuestions, timeLeft));\r\n  };\r\n\r\n  const handleNext = () => {\r\n    setUserAnswer('');\r\n    setShowResult(false);\r\n    const newWord = getRandomWord();\r\n    setCurrentWord(newWord);\r\n    setOptions(generateOptions(newWord));\r\n    setTimeLeft(30);\r\n    setShowHint(false);\r\n    setTimerActive(true);\r\n    if (inputRef.current) {\r\n      inputRef.current.focus();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    startNewPractice();\r\n  }, [selectedDifficulty, selectedCategory, quizMode]);\r\n\r\n  useEffect(() => {\r\n    let timer: NodeJS.Timeout;\r\n    if (timerActive && timeLeft > 0) {\r\n      timer = setInterval(() => {\r\n        setTimeLeft(prev => prev - 1);\r\n      }, 1000);\r\n    } else if (timeLeft === 0 && !showResult) {\r\n      playSound(timeUpSound);\r\n      handleAnswer('');\r\n    }\r\n    return () => clearInterval(timer);\r\n  }, [timeLeft, timerActive]);\r\n\r\n  useEffect(() => {\r\n    if (progressRef.current) {\r\n      const progress = (timeLeft / 30) * 100;\r\n      progressRef.current.style.width = `${progress}%`;\r\n    }\r\n  }, [timeLeft]);\r\n\r\n  const getThemeClasses = () => {\r\n    if (isDarkMode) {\r\n      return {\r\n        container: 'bg-dark-card',\r\n        text: 'text-dark-text',\r\n        input: 'bg-dark-bg border-dark-border text-dark-text',\r\n        button: {\r\n          primary: 'bg-primary hover:bg-primary-dark text-white',\r\n          secondary: 'bg-secondary hover:bg-secondary-dark text-white',\r\n          hint: 'bg-yellow-500 hover:bg-yellow-600 text-white',\r\n        },\r\n        hint: 'bg-yellow-900/20 border-yellow-800/30 text-yellow-200',\r\n        result: {\r\n          correct: 'bg-green-900/20 border-green-800/30 text-green-200',\r\n          incorrect: 'bg-red-900/20 border-red-800/30 text-red-200',\r\n        },\r\n      };\r\n    }\r\n\r\n    switch (theme) {\r\n      case 'blue':\r\n        return {\r\n          container: 'bg-blue-card',\r\n          text: 'text-blue-text',\r\n          input: 'bg-white border-blue-border text-blue-text',\r\n          button: {\r\n            primary: 'bg-primary hover:bg-primary-dark text-white',\r\n            secondary: 'bg-secondary hover:bg-secondary-dark text-white',\r\n            hint: 'bg-yellow-500 hover:bg-yellow-600 text-white',\r\n          },\r\n          hint: 'bg-yellow-50 border-yellow-200 text-yellow-800',\r\n          result: {\r\n            correct: 'bg-green-50 border-green-200 text-green-800',\r\n            incorrect: 'bg-red-50 border-red-200 text-red-800',\r\n          },\r\n        };\r\n      case 'green':\r\n        return {\r\n          container: 'bg-green-card',\r\n          text: 'text-green-text',\r\n          input: 'bg-white border-green-border text-green-text',\r\n          button: {\r\n            primary: 'bg-primary hover:bg-primary-dark text-white',\r\n            secondary: 'bg-secondary hover:bg-secondary-dark text-white',\r\n            hint: 'bg-yellow-500 hover:bg-yellow-600 text-white',\r\n          },\r\n          hint: 'bg-yellow-50 border-yellow-200 text-yellow-800',\r\n          result: {\r\n            correct: 'bg-green-50 border-green-200 text-green-800',\r\n            incorrect: 'bg-red-50 border-red-200 text-red-800',\r\n          },\r\n        };\r\n      default:\r\n        return {\r\n          container: 'bg-white',\r\n          text: 'text-gray-800',\r\n          input: 'bg-white border-gray-200 text-gray-800',\r\n          button: {\r\n            primary: 'bg-primary hover:bg-primary-dark text-white',\r\n            secondary: 'bg-secondary hover:bg-secondary-dark text-white',\r\n            hint: 'bg-yellow-500 hover:bg-yellow-600 text-white',\r\n          },\r\n          hint: 'bg-yellow-50 border-yellow-200 text-yellow-800',\r\n          result: {\r\n            correct: 'bg-green-50 border-green-200 text-green-800',\r\n            incorrect: 'bg-red-50 border-red-200 text-red-800',\r\n          },\r\n        };\r\n    }\r\n  };\r\n\r\n  const themeClasses = getThemeClasses();\r\n\r\n  return (\r\n    <div className=\"max-w-2xl mx-auto\">\r\n      <QuizModeSelector\r\n        selectedMode={quizMode}\r\n        onModeSelect={setQuizMode}\r\n        availableModes={['multiple-choice', 'writing', 'flashcards']}\r\n      />\r\n\r\n      <div className={`mb-8 ${themeClasses.container} rounded-lg shadow-md p-6`}>\r\n        <div className=\"flex flex-wrap gap-4 mb-6\">\r\n          <select\r\n            value={selectedDifficulty}\r\n            onChange={(e) => setSelectedDifficulty(e.target.value as Difficulty)}\r\n            className={`flex-1 p-3 border rounded-lg ${themeClasses.input} focus:ring-2 focus:ring-primary focus:border-primary`}\r\n          >\r\n            <option value=\"easy\">Easy</option>\r\n            <option value=\"medium\">Medium</option>\r\n            <option value=\"hard\">Hard</option>\r\n          </select>\r\n\r\n          <select\r\n            value={selectedCategory}\r\n            onChange={(e) => setSelectedCategory(e.target.value as Category)}\r\n            className={`flex-1 p-3 border rounded-lg ${themeClasses.input} focus:ring-2 focus:ring-primary focus:border-primary`}\r\n          >\r\n            <option value=\"food\">Food</option>\r\n            <option value=\"animals\">Animals</option>\r\n            <option value=\"colors\">Colors</option>\r\n            <option value=\"numbers\">Numbers</option>\r\n            <option value=\"all\">All Categories</option>\r\n          </select>\r\n\r\n          <button\r\n            onClick={() => setSoundEnabled(!soundEnabled)}\r\n            className={`p-3 rounded-lg transition-colors ${\r\n              soundEnabled ? 'bg-green-500 hover:bg-green-600' : 'bg-red-500 hover:bg-red-600'\r\n            } text-white`}\r\n          >\r\n            {soundEnabled ? '🔊' : '🔇'}\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"flex justify-between items-center mb-4\">\r\n          <div className={`text-lg font-semibold ${themeClasses.text}`}>\r\n            Score: {score}/{totalQuestions}\r\n            {streak > 2 && (\r\n              <span className=\"ml-2 text-yellow-500\">\r\n                🔥 {streak} streak!\r\n              </span>\r\n            )}\r\n          </div>\r\n          <div className={`text-lg font-semibold ${timeLeft <= 10 ? 'text-red-500 animate-pulse' : themeClasses.text}`}>\r\n            Time: {timeLeft}s\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"w-full h-2 bg-gray-200 dark:bg-dark-border rounded-full overflow-hidden\">\r\n          <div\r\n            ref={progressRef}\r\n            className={`h-full transition-all duration-1000 ${\r\n              timeLeft <= 10 ? 'bg-red-500' : 'bg-primary'\r\n            }`}\r\n            style={{ width: '100%' }}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {currentWord && (\r\n        <div className={`${themeClasses.container} rounded-lg shadow-md p-6 transform transition-all duration-300 hover:shadow-lg`}>\r\n          <div className={`text-3xl font-bold text-center mb-4 ${themeClasses.text}`}>\r\n            {currentWord.japanese}\r\n          </div>\r\n\r\n          {!showHint && !showResult && (\r\n            <button\r\n              onClick={() => setShowHint(true)}\r\n              className={`w-full mb-6 ${themeClasses.button.hint} py-3 rounded-lg transition-colors`}\r\n            >\r\n              Show Hint\r\n            </button>\r\n          )}\r\n\r\n          {showHint && !showResult && (\r\n            <div className={`mb-6 p-4 rounded-lg ${themeClasses.hint}`}>\r\n              <p>{currentWord.hint}</p>\r\n            </div>\r\n          )}\r\n\r\n          {quizMode === 'multiple-choice' && !showResult && (\r\n            <div className=\"grid grid-cols-1 gap-3\">\r\n              {options.map((option, index) => (\r\n                <button\r\n                  key={index}\r\n                  onClick={() => handleAnswer(option)}\r\n                  className={`p-4 rounded-lg text-left transition-colors ${\r\n                    themeClasses.button.inactive\r\n                  }`}\r\n                >\r\n                  {option}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          )}\r\n\r\n          {quizMode === 'writing' && !showResult && (\r\n            <form onSubmit={(e) => { e.preventDefault(); handleAnswer(userAnswer); }} className=\"space-y-4\">\r\n              <input\r\n                ref={inputRef}\r\n                type=\"text\"\r\n                value={userAnswer}\r\n                onChange={(e) => setUserAnswer(e.target.value)}\r\n                placeholder=\"Type the English translation\"\r\n                className={`w-full p-3 border rounded-lg ${themeClasses.input} focus:ring-2 focus:ring-primary focus:border-primary`}\r\n                disabled={showResult}\r\n              />\r\n\r\n              <button\r\n                type=\"submit\"\r\n                className={`w-full ${themeClasses.button.primary} py-3 rounded-lg transition-colors`}\r\n              >\r\n                Check Answer\r\n              </button>\r\n            </form>\r\n          )}\r\n\r\n          {showResult && (\r\n            <div className=\"space-y-4\">\r\n              <div className={`text-center p-4 rounded-lg ${\r\n                isCorrect ? themeClasses.result.correct : themeClasses.result.incorrect\r\n              }`}>\r\n                {isCorrect ? 'Correct! 🎉' : `Incorrect. The answer is: ${currentWord.english}`}\r\n              </div>\r\n              <button\r\n                onClick={handleNext}\r\n                className={`w-full ${themeClasses.button.secondary} py-3 rounded-lg transition-colors`}\r\n              >\r\n                Next Word\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WordPractice; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}