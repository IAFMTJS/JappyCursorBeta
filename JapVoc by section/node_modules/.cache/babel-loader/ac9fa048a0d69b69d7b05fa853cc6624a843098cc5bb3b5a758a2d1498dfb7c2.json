{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\siebe\\\\Cursor\\\\JapVoc by section\\\\src\\\\context\\\\ThemeContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext(undefined);\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  const [theme, setTheme] = useState('light');\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  useEffect(() => {\n    // Check system preference for dark mode\n    const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n    setIsDarkMode(prefersDark);\n  }, []);\n  useEffect(() => {\n    // Update document class for dark mode\n    document.documentElement.classList.toggle('dark', isDarkMode);\n  }, [isDarkMode]);\n  const toggleDarkMode = () => {\n    setIsDarkMode(!isDarkMode);\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme,\n      setTheme,\n      isDarkMode,\n      toggleDarkMode\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeProvider, \"2QXQo3Ylr6S5JUEazUE5Uh0xvZc=\");\n_c = ThemeProvider;\nexport const useTheme = () => {\n  _s2();\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n_s2(useTheme, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","ThemeContext","undefined","ThemeProvider","children","_s","theme","setTheme","isDarkMode","setIsDarkMode","prefersDark","window","matchMedia","matches","document","documentElement","classList","toggle","toggleDarkMode","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTheme","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/siebe/Cursor/JapVoc by section/src/context/ThemeContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\ntype Theme = 'light' | 'dark' | 'blue' | 'green';\r\n\r\ninterface ThemeContextType {\r\n  theme: Theme;\r\n  setTheme: (theme: Theme) => void;\r\n  isDarkMode: boolean;\r\n  toggleDarkMode: () => void;\r\n}\r\n\r\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\r\n\r\nexport const ThemeProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [theme, setTheme] = useState<Theme>('light');\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Check system preference for dark mode\r\n    const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\r\n    setIsDarkMode(prefersDark);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Update document class for dark mode\r\n    document.documentElement.classList.toggle('dark', isDarkMode);\r\n  }, [isDarkMode]);\r\n\r\n  const toggleDarkMode = () => {\r\n    setIsDarkMode(!isDarkMode);\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ theme, setTheme, isDarkMode, toggleDarkMode }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useTheme = () => {\r\n  const context = useContext(ThemeContext);\r\n  if (context === undefined) {\r\n    throw new Error('useTheme must be used within a ThemeProvider');\r\n  }\r\n  return context;\r\n}; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAW9E,MAAMC,YAAY,gBAAGN,aAAa,CAA+BO,SAAS,CAAC;AAE3E,OAAO,MAAMC,aAAsD,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACtF,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAQ,OAAO,CAAC;EAClD,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMY,WAAW,GAAGC,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACC,OAAO;IAC7EJ,aAAa,CAACC,WAAW,CAAC;EAC5B,CAAC,EAAE,EAAE,CAAC;EAENZ,SAAS,CAAC,MAAM;IACd;IACAgB,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,MAAM,CAAC,MAAM,EAAET,UAAU,CAAC;EAC/D,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAEhB,MAAMU,cAAc,GAAGA,CAAA,KAAM;IAC3BT,aAAa,CAAC,CAACD,UAAU,CAAC;EAC5B,CAAC;EAED,oBACER,OAAA,CAACC,YAAY,CAACkB,QAAQ;IAACC,KAAK,EAAE;MAAEd,KAAK;MAAEC,QAAQ;MAAEC,UAAU;MAAEU;IAAe,CAAE;IAAAd,QAAA,EAC3EA;EAAQ;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACnB,EAAA,CAxBWF,aAAsD;AAAAsB,EAAA,GAAtDtB,aAAsD;AA0BnE,OAAO,MAAMuB,QAAQ,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC5B,MAAMC,OAAO,GAAGhC,UAAU,CAACK,YAAY,CAAC;EACxC,IAAI2B,OAAO,KAAK1B,SAAS,EAAE;IACzB,MAAM,IAAI2B,KAAK,CAAC,8CAA8C,CAAC;EACjE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,QAAQ;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}