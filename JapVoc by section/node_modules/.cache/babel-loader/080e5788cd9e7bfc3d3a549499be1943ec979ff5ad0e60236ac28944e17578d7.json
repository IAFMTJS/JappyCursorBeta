{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\siebe\\\\Cursor\\\\JapVoc by section\\\\src\\\\context\\\\ProgressContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialProgress = {\n  wordPractice: {\n    totalQuestions: 0,\n    correctAnswers: 0,\n    bestStreak: 0,\n    lastAttempt: '',\n    averageTime: 0\n  },\n  sentencePractice: {\n    totalQuestions: 0,\n    correctAnswers: 0,\n    bestStreak: 0,\n    lastAttempt: '',\n    averageTime: 0\n  },\n  kanji: {\n    totalQuestions: 0,\n    correctAnswers: 0,\n    bestStreak: 0,\n    lastAttempt: '',\n    averageTime: 0\n  }\n};\nconst ProgressContext = /*#__PURE__*/createContext(undefined);\nexport const ProgressProvider = ({\n  children\n}) => {\n  _s();\n  const [progress, setProgress] = useState(() => {\n    const savedProgress = localStorage.getItem('progress');\n    return savedProgress ? JSON.parse(savedProgress) : initialProgress;\n  });\n  useEffect(() => {\n    localStorage.setItem('progress', JSON.stringify(progress));\n  }, [progress]);\n  const updateProgress = (section, data) => {\n    setProgress(prev => ({\n      ...prev,\n      [section]: {\n        ...prev[section],\n        ...data,\n        lastAttempt: new Date().toISOString()\n      }\n    }));\n  };\n  const resetProgress = () => {\n    setProgress(initialProgress);\n    localStorage.removeItem('progress');\n  };\n  return /*#__PURE__*/_jsxDEV(ProgressContext.Provider, {\n    value: {\n      progress,\n      updateProgress,\n      resetProgress\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(ProgressProvider, \"WQWSQlmhax/1iKLHMFYj9kSWBoM=\");\n_c = ProgressProvider;\nexport const useProgress = () => {\n  _s2();\n  const context = useContext(ProgressContext);\n  if (context === undefined) {\n    throw new Error('useProgress must be used within a ProgressProvider');\n  }\n  return context;\n};\n_s2(useProgress, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"ProgressProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","initialProgress","wordPractice","totalQuestions","correctAnswers","bestStreak","lastAttempt","averageTime","sentencePractice","kanji","ProgressContext","undefined","ProgressProvider","children","_s","progress","setProgress","savedProgress","localStorage","getItem","JSON","parse","setItem","stringify","updateProgress","section","data","prev","Date","toISOString","resetProgress","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useProgress","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/siebe/Cursor/JapVoc by section/src/context/ProgressContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\ninterface SectionProgress {\r\n  totalQuestions: number;\r\n  correctAnswers: number;\r\n  bestStreak: number;\r\n  lastAttempt: string;\r\n  averageTime: number;\r\n}\r\n\r\ninterface ProgressData {\r\n  wordPractice: SectionProgress;\r\n  sentencePractice: SectionProgress;\r\n  kanji: SectionProgress;\r\n}\r\n\r\ninterface ProgressContextType {\r\n  progress: ProgressData;\r\n  updateProgress: (section: keyof ProgressData, data: Partial<SectionProgress>) => void;\r\n  resetProgress: () => void;\r\n}\r\n\r\nconst initialProgress: ProgressData = {\r\n  wordPractice: {\r\n    totalQuestions: 0,\r\n    correctAnswers: 0,\r\n    bestStreak: 0,\r\n    lastAttempt: '',\r\n    averageTime: 0\r\n  },\r\n  sentencePractice: {\r\n    totalQuestions: 0,\r\n    correctAnswers: 0,\r\n    bestStreak: 0,\r\n    lastAttempt: '',\r\n    averageTime: 0\r\n  },\r\n  kanji: {\r\n    totalQuestions: 0,\r\n    correctAnswers: 0,\r\n    bestStreak: 0,\r\n    lastAttempt: '',\r\n    averageTime: 0\r\n  }\r\n};\r\n\r\nconst ProgressContext = createContext<ProgressContextType | undefined>(undefined);\r\n\r\nexport const ProgressProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [progress, setProgress] = useState<ProgressData>(() => {\r\n    const savedProgress = localStorage.getItem('progress');\r\n    return savedProgress ? JSON.parse(savedProgress) : initialProgress;\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('progress', JSON.stringify(progress));\r\n  }, [progress]);\r\n\r\n  const updateProgress = (section: keyof ProgressData, data: Partial<SectionProgress>) => {\r\n    setProgress(prev => ({\r\n      ...prev,\r\n      [section]: {\r\n        ...prev[section],\r\n        ...data,\r\n        lastAttempt: new Date().toISOString()\r\n      }\r\n    }));\r\n  };\r\n\r\n  const resetProgress = () => {\r\n    setProgress(initialProgress);\r\n    localStorage.removeItem('progress');\r\n  };\r\n\r\n  return (\r\n    <ProgressContext.Provider value={{ progress, updateProgress, resetProgress }}>\r\n      {children}\r\n    </ProgressContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useProgress = () => {\r\n  const context = useContext(ProgressContext);\r\n  if (context === undefined) {\r\n    throw new Error('useProgress must be used within a ProgressProvider');\r\n  }\r\n  return context;\r\n}; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAsB9E,MAAMC,eAA6B,GAAG;EACpCC,YAAY,EAAE;IACZC,cAAc,EAAE,CAAC;IACjBC,cAAc,EAAE,CAAC;IACjBC,UAAU,EAAE,CAAC;IACbC,WAAW,EAAE,EAAE;IACfC,WAAW,EAAE;EACf,CAAC;EACDC,gBAAgB,EAAE;IAChBL,cAAc,EAAE,CAAC;IACjBC,cAAc,EAAE,CAAC;IACjBC,UAAU,EAAE,CAAC;IACbC,WAAW,EAAE,EAAE;IACfC,WAAW,EAAE;EACf,CAAC;EACDE,KAAK,EAAE;IACLN,cAAc,EAAE,CAAC;IACjBC,cAAc,EAAE,CAAC;IACjBC,UAAU,EAAE,CAAC;IACbC,WAAW,EAAE,EAAE;IACfC,WAAW,EAAE;EACf;AACF,CAAC;AAED,MAAMG,eAAe,gBAAGf,aAAa,CAAkCgB,SAAS,CAAC;AAEjF,OAAO,MAAMC,gBAAyD,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACzF,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAAe,MAAM;IAC3D,MAAMoB,aAAa,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACtD,OAAOF,aAAa,GAAGG,IAAI,CAACC,KAAK,CAACJ,aAAa,CAAC,GAAGhB,eAAe;EACpE,CAAC,CAAC;EAEFH,SAAS,CAAC,MAAM;IACdoB,YAAY,CAACI,OAAO,CAAC,UAAU,EAAEF,IAAI,CAACG,SAAS,CAACR,QAAQ,CAAC,CAAC;EAC5D,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,MAAMS,cAAc,GAAGA,CAACC,OAA2B,EAAEC,IAA8B,KAAK;IACtFV,WAAW,CAACW,IAAI,KAAK;MACnB,GAAGA,IAAI;MACP,CAACF,OAAO,GAAG;QACT,GAAGE,IAAI,CAACF,OAAO,CAAC;QAChB,GAAGC,IAAI;QACPpB,WAAW,EAAE,IAAIsB,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;MACtC;IACF,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1Bd,WAAW,CAACf,eAAe,CAAC;IAC5BiB,YAAY,CAACa,UAAU,CAAC,UAAU,CAAC;EACrC,CAAC;EAED,oBACE/B,OAAA,CAACU,eAAe,CAACsB,QAAQ;IAACC,KAAK,EAAE;MAAElB,QAAQ;MAAES,cAAc;MAAEM;IAAc,CAAE;IAAAjB,QAAA,EAC1EA;EAAQ;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE/B,CAAC;AAACvB,EAAA,CA/BWF,gBAAyD;AAAA0B,EAAA,GAAzD1B,gBAAyD;AAiCtE,OAAO,MAAM2B,WAAW,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC/B,MAAMC,OAAO,GAAG7C,UAAU,CAACc,eAAe,CAAC;EAC3C,IAAI+B,OAAO,KAAK9B,SAAS,EAAE;IACzB,MAAM,IAAI+B,KAAK,CAAC,oDAAoD,CAAC;EACvE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,WAAW;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}