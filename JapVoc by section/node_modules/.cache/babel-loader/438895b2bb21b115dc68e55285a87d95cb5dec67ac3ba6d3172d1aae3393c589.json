{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\siebe\\\\Cursor\\\\JapVoc by section\\\\src\\\\components\\\\WordPractice.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { quizWords } from '../data/quizData';\nimport { useTheme } from '../context/ThemeContext';\nimport { useProgress } from '../context/ProgressContext';\nimport { checkAnswer, calculateScore, calculateAverageTime } from '../utils/quizUtils';\n\n// Sound effects\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst correctSound = new Audio('/sounds/correct.mp3');\nconst incorrectSound = new Audio('/sounds/incorrect.mp3');\nconst timeUpSound = new Audio('/sounds/timeup.mp3');\nconst WordPractice = () => {\n  _s();\n  const {\n    theme,\n    isDarkMode\n  } = useTheme();\n  const [selectedDifficulty, setSelectedDifficulty] = useState('easy');\n  const [selectedCategory, setSelectedCategory] = useState('food');\n  const [currentWord, setCurrentWord] = useState(null);\n  const [userAnswer, setUserAnswer] = useState('');\n  const [score, setScore] = useState(0);\n  const [totalQuestions, setTotalQuestions] = useState(0);\n  const [showResult, setShowResult] = useState(false);\n  const [isCorrect, setIsCorrect] = useState(false);\n  const [usedWords, setUsedWords] = useState(new Set());\n  const [timeLeft, setTimeLeft] = useState(30);\n  const [showHint, setShowHint] = useState(false);\n  const [timerActive, setTimerActive] = useState(true);\n  const [soundEnabled, setSoundEnabled] = useState(true);\n  const [streak, setStreak] = useState(0);\n  const progressRef = useRef(null);\n  const inputRef = useRef(null);\n  const {\n    updateProgress\n  } = useProgress();\n  const [averageTime, setAverageTime] = useState(0);\n  const getFilteredWords = () => {\n    return quizWords.filter(word => {\n      const matchesDifficulty = word.difficulty === selectedDifficulty;\n      const matchesCategory = selectedCategory === 'all' || word.category === selectedCategory;\n      return matchesDifficulty && matchesCategory;\n    });\n  };\n  const getRandomWord = () => {\n    const filteredWords = getFilteredWords();\n    const availableWords = filteredWords.filter(word => !usedWords.has(word.japanese));\n    if (availableWords.length === 0) {\n      setUsedWords(new Set());\n      return filteredWords[Math.floor(Math.random() * filteredWords.length)];\n    }\n    return availableWords[Math.floor(Math.random() * availableWords.length)];\n  };\n  const startNewPractice = () => {\n    setScore(0);\n    setTotalQuestions(0);\n    setShowResult(false);\n    setUsedWords(new Set());\n    setCurrentWord(getRandomWord());\n    setTimeLeft(30);\n    setShowHint(false);\n    setTimerActive(true);\n    setStreak(0);\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  };\n  const playSound = sound => {\n    if (soundEnabled) {\n      sound.currentTime = 0;\n      sound.play().catch(() => {\n        setSoundEnabled(false);\n      });\n    }\n  };\n  const handleAnswer = () => {\n    if (!timerActive || !currentWord) return;\n    const isAnswerCorrect = checkAnswer(userAnswer, currentWord.english);\n    const pointsEarned = calculateScore(isAnswerCorrect, streak);\n    if (isAnswerCorrect) {\n      correctSound.play();\n      setStreak(prev => prev + 1);\n    } else {\n      incorrectSound.play();\n      setStreak(0);\n    }\n    setScore(prev => prev + pointsEarned);\n    setTotalQuestions(prev => prev + 1);\n    setUsedWords(prev => new Set([...prev, currentWord.japanese]));\n    setIsCorrect(isAnswerCorrect);\n    setShowResult(true);\n    setTimerActive(false);\n    updateProgress('wordPractice', {\n      correctAnswers: isAnswerCorrect ? score + 1 : score,\n      bestStreak: Math.max(streak, streak + (isAnswerCorrect ? 1 : 0)),\n      averageTime: calculateAverageTime(averageTime, totalQuestions, timeLeft)\n    });\n    setAverageTime(calculateAverageTime(averageTime, totalQuestions, timeLeft));\n  };\n  const handleNext = () => {\n    setUserAnswer('');\n    setShowResult(false);\n    setCurrentWord(getRandomWord());\n    setTimeLeft(30);\n    setShowHint(false);\n    setTimerActive(true);\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  };\n  useEffect(() => {\n    startNewPractice();\n  }, [selectedDifficulty, selectedCategory]);\n  useEffect(() => {\n    let timer;\n    if (timerActive && timeLeft > 0) {\n      timer = setInterval(() => {\n        setTimeLeft(prev => prev - 1);\n      }, 1000);\n    } else if (timeLeft === 0 && !showResult) {\n      playSound(timeUpSound);\n      handleAnswer();\n    }\n    return () => clearInterval(timer);\n  }, [timeLeft, timerActive]);\n  useEffect(() => {\n    if (progressRef.current) {\n      const progress = timeLeft / 30 * 100;\n      progressRef.current.style.width = `${progress}%`;\n    }\n  }, [timeLeft]);\n  const getThemeClasses = () => {\n    if (isDarkMode) {\n      return {\n        container: 'bg-dark-card',\n        text: 'text-dark-text',\n        input: 'bg-dark-bg border-dark-border text-dark-text',\n        button: {\n          primary: 'bg-primary hover:bg-primary-dark text-white',\n          secondary: 'bg-secondary hover:bg-secondary-dark text-white',\n          hint: 'bg-yellow-500 hover:bg-yellow-600 text-white'\n        },\n        hint: 'bg-yellow-900/20 border-yellow-800/30 text-yellow-200',\n        result: {\n          correct: 'bg-green-900/20 border-green-800/30 text-green-200',\n          incorrect: 'bg-red-900/20 border-red-800/30 text-red-200'\n        }\n      };\n    }\n    switch (theme) {\n      case 'blue':\n        return {\n          container: 'bg-blue-card',\n          text: 'text-blue-text',\n          input: 'bg-white border-blue-border text-blue-text',\n          button: {\n            primary: 'bg-primary hover:bg-primary-dark text-white',\n            secondary: 'bg-secondary hover:bg-secondary-dark text-white',\n            hint: 'bg-yellow-500 hover:bg-yellow-600 text-white'\n          },\n          hint: 'bg-yellow-50 border-yellow-200 text-yellow-800',\n          result: {\n            correct: 'bg-green-50 border-green-200 text-green-800',\n            incorrect: 'bg-red-50 border-red-200 text-red-800'\n          }\n        };\n      case 'green':\n        return {\n          container: 'bg-green-card',\n          text: 'text-green-text',\n          input: 'bg-white border-green-border text-green-text',\n          button: {\n            primary: 'bg-primary hover:bg-primary-dark text-white',\n            secondary: 'bg-secondary hover:bg-secondary-dark text-white',\n            hint: 'bg-yellow-500 hover:bg-yellow-600 text-white'\n          },\n          hint: 'bg-yellow-50 border-yellow-200 text-yellow-800',\n          result: {\n            correct: 'bg-green-50 border-green-200 text-green-800',\n            incorrect: 'bg-red-50 border-red-200 text-red-800'\n          }\n        };\n      default:\n        return {\n          container: 'bg-white',\n          text: 'text-gray-800',\n          input: 'bg-white border-gray-200 text-gray-800',\n          button: {\n            primary: 'bg-primary hover:bg-primary-dark text-white',\n            secondary: 'bg-secondary hover:bg-secondary-dark text-white',\n            hint: 'bg-yellow-500 hover:bg-yellow-600 text-white'\n          },\n          hint: 'bg-yellow-50 border-yellow-200 text-yellow-800',\n          result: {\n            correct: 'bg-green-50 border-green-200 text-green-800',\n            incorrect: 'bg-red-50 border-red-200 text-red-800'\n          }\n        };\n    }\n  };\n  const themeClasses = getThemeClasses();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-2xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `mb-8 ${themeClasses.container} rounded-lg shadow-md p-6`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap gap-4 mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedDifficulty,\n          onChange: e => setSelectedDifficulty(e.target.value),\n          className: `flex-1 p-3 border rounded-lg ${themeClasses.input} focus:ring-2 focus:ring-primary focus:border-primary`,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"easy\",\n            children: \"Easy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"medium\",\n            children: \"Medium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"hard\",\n            children: \"Hard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedCategory,\n          onChange: e => setSelectedCategory(e.target.value),\n          className: `flex-1 p-3 border rounded-lg ${themeClasses.input} focus:ring-2 focus:ring-primary focus:border-primary`,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"food\",\n            children: \"Food\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"animals\",\n            children: \"Animals\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"colors\",\n            children: \"Colors\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"numbers\",\n            children: \"Numbers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"all\",\n            children: \"All Categories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSoundEnabled(!soundEnabled),\n          className: `p-3 rounded-lg transition-colors ${soundEnabled ? 'bg-green-500 hover:bg-green-600' : 'bg-red-500 hover:bg-red-600'} text-white`,\n          children: soundEnabled ? '🔊' : '🔇'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `text-lg font-semibold ${themeClasses.text}`,\n          children: [\"Score: \", score, \"/\", totalQuestions, streak > 2 && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-2 text-yellow-500\",\n            children: [\"\\uD83D\\uDD25 \", streak, \" streak!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `text-lg font-semibold ${timeLeft <= 10 ? 'text-red-500 animate-pulse' : themeClasses.text}`,\n          children: [\"Time: \", timeLeft, \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full h-2 bg-gray-200 dark:bg-dark-border rounded-full overflow-hidden\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: progressRef,\n          className: `h-full transition-all duration-1000 ${timeLeft <= 10 ? 'bg-red-500' : 'bg-primary'}`,\n          style: {\n            width: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), currentWord && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${themeClasses.container} rounded-lg shadow-md p-6 transform transition-all duration-300 hover:shadow-lg`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `text-3xl font-bold text-center mb-4 ${themeClasses.text}`,\n        children: currentWord.japanese\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 11\n      }, this), !showHint && !showResult && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowHint(true),\n        className: `w-full mb-6 ${themeClasses.button.hint} py-3 rounded-lg transition-colors`,\n        children: \"Show Hint\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 13\n      }, this), showHint && !showResult && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `mb-6 p-4 rounded-lg ${themeClasses.hint}`,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: currentWord.hint\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleAnswer,\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ref: inputRef,\n          type: \"text\",\n          value: userAnswer,\n          onChange: e => setUserAnswer(e.target.value),\n          placeholder: \"Type the English translation\",\n          className: `w-full p-3 border rounded-lg ${themeClasses.input} focus:ring-2 focus:ring-primary focus:border-primary`,\n          disabled: showResult\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 13\n        }, this), !showResult ? /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: `w-full ${themeClasses.button.primary} py-3 rounded-lg transition-colors`,\n          children: \"Check Answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `text-center p-4 rounded-lg ${isCorrect ? themeClasses.result.correct : themeClasses.result.incorrect}`,\n            children: isCorrect ? 'Correct! 🎉' : `Incorrect. The answer is: ${currentWord.english}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleNext,\n            className: `w-full ${themeClasses.button.secondary} py-3 rounded-lg transition-colors`,\n            children: \"Next Word\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 5\n  }, this);\n};\n_s(WordPractice, \"tTnPYuTl6/MUzLe6C+O72gmUV9Y=\", false, function () {\n  return [useTheme, useProgress];\n});\n_c = WordPractice;\nexport default WordPractice;\nvar _c;\n$RefreshReg$(_c, \"WordPractice\");","map":{"version":3,"names":["React","useState","useEffect","useRef","quizWords","useTheme","useProgress","checkAnswer","calculateScore","calculateAverageTime","jsxDEV","_jsxDEV","correctSound","Audio","incorrectSound","timeUpSound","WordPractice","_s","theme","isDarkMode","selectedDifficulty","setSelectedDifficulty","selectedCategory","setSelectedCategory","currentWord","setCurrentWord","userAnswer","setUserAnswer","score","setScore","totalQuestions","setTotalQuestions","showResult","setShowResult","isCorrect","setIsCorrect","usedWords","setUsedWords","Set","timeLeft","setTimeLeft","showHint","setShowHint","timerActive","setTimerActive","soundEnabled","setSoundEnabled","streak","setStreak","progressRef","inputRef","updateProgress","averageTime","setAverageTime","getFilteredWords","filter","word","matchesDifficulty","difficulty","matchesCategory","category","getRandomWord","filteredWords","availableWords","has","japanese","length","Math","floor","random","startNewPractice","current","focus","playSound","sound","currentTime","play","catch","handleAnswer","isAnswerCorrect","english","pointsEarned","prev","correctAnswers","bestStreak","max","handleNext","timer","setInterval","clearInterval","progress","style","width","getThemeClasses","container","text","input","button","primary","secondary","hint","result","correct","incorrect","themeClasses","className","children","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","onSubmit","type","placeholder","disabled","_c","$RefreshReg$"],"sources":["C:/Users/siebe/Cursor/JapVoc by section/src/components/WordPractice.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { QuizWord, Difficulty, Category, quizWords } from '../data/quizData';\r\nimport { useTheme } from '../context/ThemeContext';\r\nimport { useProgress } from '../context/ProgressContext';\r\nimport { checkAnswer, calculateScore, calculateAverageTime } from '../utils/quizUtils';\r\n\r\n// Sound effects\r\nconst correctSound = new Audio('/sounds/correct.mp3');\r\nconst incorrectSound = new Audio('/sounds/incorrect.mp3');\r\nconst timeUpSound = new Audio('/sounds/timeup.mp3');\r\n\r\nconst WordPractice: React.FC = () => {\r\n  const { theme, isDarkMode } = useTheme();\r\n  const [selectedDifficulty, setSelectedDifficulty] = useState<Difficulty>('easy');\r\n  const [selectedCategory, setSelectedCategory] = useState<Category>('food');\r\n  const [currentWord, setCurrentWord] = useState<QuizWord | null>(null);\r\n  const [userAnswer, setUserAnswer] = useState('');\r\n  const [score, setScore] = useState(0);\r\n  const [totalQuestions, setTotalQuestions] = useState(0);\r\n  const [showResult, setShowResult] = useState(false);\r\n  const [isCorrect, setIsCorrect] = useState(false);\r\n  const [usedWords, setUsedWords] = useState<Set<string>>(new Set());\r\n  const [timeLeft, setTimeLeft] = useState(30);\r\n  const [showHint, setShowHint] = useState(false);\r\n  const [timerActive, setTimerActive] = useState(true);\r\n  const [soundEnabled, setSoundEnabled] = useState(true);\r\n  const [streak, setStreak] = useState(0);\r\n  const progressRef = useRef<HTMLDivElement>(null);\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n  const { updateProgress } = useProgress();\r\n  const [averageTime, setAverageTime] = useState(0);\r\n\r\n  const getFilteredWords = () => {\r\n    return quizWords.filter(word => {\r\n      const matchesDifficulty = word.difficulty === selectedDifficulty;\r\n      const matchesCategory = selectedCategory === 'all' || word.category === selectedCategory;\r\n      return matchesDifficulty && matchesCategory;\r\n    });\r\n  };\r\n\r\n  const getRandomWord = () => {\r\n    const filteredWords = getFilteredWords();\r\n    const availableWords = filteredWords.filter(word => !usedWords.has(word.japanese));\r\n    \r\n    if (availableWords.length === 0) {\r\n      setUsedWords(new Set());\r\n      return filteredWords[Math.floor(Math.random() * filteredWords.length)];\r\n    }\r\n    \r\n    return availableWords[Math.floor(Math.random() * availableWords.length)];\r\n  };\r\n\r\n  const startNewPractice = () => {\r\n    setScore(0);\r\n    setTotalQuestions(0);\r\n    setShowResult(false);\r\n    setUsedWords(new Set());\r\n    setCurrentWord(getRandomWord());\r\n    setTimeLeft(30);\r\n    setShowHint(false);\r\n    setTimerActive(true);\r\n    setStreak(0);\r\n    if (inputRef.current) {\r\n      inputRef.current.focus();\r\n    }\r\n  };\r\n\r\n  const playSound = (sound: HTMLAudioElement) => {\r\n    if (soundEnabled) {\r\n      sound.currentTime = 0;\r\n      sound.play().catch(() => {\r\n        setSoundEnabled(false);\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleAnswer = () => {\r\n    if (!timerActive || !currentWord) return;\r\n\r\n    const isAnswerCorrect = checkAnswer(userAnswer, currentWord.english);\r\n    const pointsEarned = calculateScore(isAnswerCorrect, streak);\r\n\r\n    if (isAnswerCorrect) {\r\n      correctSound.play();\r\n      setStreak(prev => prev + 1);\r\n    } else {\r\n      incorrectSound.play();\r\n      setStreak(0);\r\n    }\r\n\r\n    setScore(prev => prev + pointsEarned);\r\n    setTotalQuestions(prev => prev + 1);\r\n    setUsedWords(prev => new Set([...prev, currentWord.japanese]));\r\n    setIsCorrect(isAnswerCorrect);\r\n    setShowResult(true);\r\n    setTimerActive(false);\r\n\r\n    updateProgress('wordPractice', {\r\n      correctAnswers: isAnswerCorrect ? (score + 1) : score,\r\n      bestStreak: Math.max(streak, streak + (isAnswerCorrect ? 1 : 0)),\r\n      averageTime: calculateAverageTime(averageTime, totalQuestions, timeLeft)\r\n    });\r\n    setAverageTime(calculateAverageTime(averageTime, totalQuestions, timeLeft));\r\n  };\r\n\r\n  const handleNext = () => {\r\n    setUserAnswer('');\r\n    setShowResult(false);\r\n    setCurrentWord(getRandomWord());\r\n    setTimeLeft(30);\r\n    setShowHint(false);\r\n    setTimerActive(true);\r\n    if (inputRef.current) {\r\n      inputRef.current.focus();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    startNewPractice();\r\n  }, [selectedDifficulty, selectedCategory]);\r\n\r\n  useEffect(() => {\r\n    let timer: NodeJS.Timeout;\r\n    if (timerActive && timeLeft > 0) {\r\n      timer = setInterval(() => {\r\n        setTimeLeft(prev => prev - 1);\r\n      }, 1000);\r\n    } else if (timeLeft === 0 && !showResult) {\r\n      playSound(timeUpSound);\r\n      handleAnswer();\r\n    }\r\n    return () => clearInterval(timer);\r\n  }, [timeLeft, timerActive]);\r\n\r\n  useEffect(() => {\r\n    if (progressRef.current) {\r\n      const progress = (timeLeft / 30) * 100;\r\n      progressRef.current.style.width = `${progress}%`;\r\n    }\r\n  }, [timeLeft]);\r\n\r\n  const getThemeClasses = () => {\r\n    if (isDarkMode) {\r\n      return {\r\n        container: 'bg-dark-card',\r\n        text: 'text-dark-text',\r\n        input: 'bg-dark-bg border-dark-border text-dark-text',\r\n        button: {\r\n          primary: 'bg-primary hover:bg-primary-dark text-white',\r\n          secondary: 'bg-secondary hover:bg-secondary-dark text-white',\r\n          hint: 'bg-yellow-500 hover:bg-yellow-600 text-white',\r\n        },\r\n        hint: 'bg-yellow-900/20 border-yellow-800/30 text-yellow-200',\r\n        result: {\r\n          correct: 'bg-green-900/20 border-green-800/30 text-green-200',\r\n          incorrect: 'bg-red-900/20 border-red-800/30 text-red-200',\r\n        },\r\n      };\r\n    }\r\n\r\n    switch (theme) {\r\n      case 'blue':\r\n        return {\r\n          container: 'bg-blue-card',\r\n          text: 'text-blue-text',\r\n          input: 'bg-white border-blue-border text-blue-text',\r\n          button: {\r\n            primary: 'bg-primary hover:bg-primary-dark text-white',\r\n            secondary: 'bg-secondary hover:bg-secondary-dark text-white',\r\n            hint: 'bg-yellow-500 hover:bg-yellow-600 text-white',\r\n          },\r\n          hint: 'bg-yellow-50 border-yellow-200 text-yellow-800',\r\n          result: {\r\n            correct: 'bg-green-50 border-green-200 text-green-800',\r\n            incorrect: 'bg-red-50 border-red-200 text-red-800',\r\n          },\r\n        };\r\n      case 'green':\r\n        return {\r\n          container: 'bg-green-card',\r\n          text: 'text-green-text',\r\n          input: 'bg-white border-green-border text-green-text',\r\n          button: {\r\n            primary: 'bg-primary hover:bg-primary-dark text-white',\r\n            secondary: 'bg-secondary hover:bg-secondary-dark text-white',\r\n            hint: 'bg-yellow-500 hover:bg-yellow-600 text-white',\r\n          },\r\n          hint: 'bg-yellow-50 border-yellow-200 text-yellow-800',\r\n          result: {\r\n            correct: 'bg-green-50 border-green-200 text-green-800',\r\n            incorrect: 'bg-red-50 border-red-200 text-red-800',\r\n          },\r\n        };\r\n      default:\r\n        return {\r\n          container: 'bg-white',\r\n          text: 'text-gray-800',\r\n          input: 'bg-white border-gray-200 text-gray-800',\r\n          button: {\r\n            primary: 'bg-primary hover:bg-primary-dark text-white',\r\n            secondary: 'bg-secondary hover:bg-secondary-dark text-white',\r\n            hint: 'bg-yellow-500 hover:bg-yellow-600 text-white',\r\n          },\r\n          hint: 'bg-yellow-50 border-yellow-200 text-yellow-800',\r\n          result: {\r\n            correct: 'bg-green-50 border-green-200 text-green-800',\r\n            incorrect: 'bg-red-50 border-red-200 text-red-800',\r\n          },\r\n        };\r\n    }\r\n  };\r\n\r\n  const themeClasses = getThemeClasses();\r\n\r\n  return (\r\n    <div className=\"max-w-2xl mx-auto\">\r\n      <div className={`mb-8 ${themeClasses.container} rounded-lg shadow-md p-6`}>\r\n        <div className=\"flex flex-wrap gap-4 mb-6\">\r\n          <select\r\n            value={selectedDifficulty}\r\n            onChange={(e) => setSelectedDifficulty(e.target.value as Difficulty)}\r\n            className={`flex-1 p-3 border rounded-lg ${themeClasses.input} focus:ring-2 focus:ring-primary focus:border-primary`}\r\n          >\r\n            <option value=\"easy\">Easy</option>\r\n            <option value=\"medium\">Medium</option>\r\n            <option value=\"hard\">Hard</option>\r\n          </select>\r\n\r\n          <select\r\n            value={selectedCategory}\r\n            onChange={(e) => setSelectedCategory(e.target.value as Category)}\r\n            className={`flex-1 p-3 border rounded-lg ${themeClasses.input} focus:ring-2 focus:ring-primary focus:border-primary`}\r\n          >\r\n            <option value=\"food\">Food</option>\r\n            <option value=\"animals\">Animals</option>\r\n            <option value=\"colors\">Colors</option>\r\n            <option value=\"numbers\">Numbers</option>\r\n            <option value=\"all\">All Categories</option>\r\n          </select>\r\n\r\n          <button\r\n            onClick={() => setSoundEnabled(!soundEnabled)}\r\n            className={`p-3 rounded-lg transition-colors ${\r\n              soundEnabled ? 'bg-green-500 hover:bg-green-600' : 'bg-red-500 hover:bg-red-600'\r\n            } text-white`}\r\n          >\r\n            {soundEnabled ? '🔊' : '🔇'}\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"flex justify-between items-center mb-4\">\r\n          <div className={`text-lg font-semibold ${themeClasses.text}`}>\r\n            Score: {score}/{totalQuestions}\r\n            {streak > 2 && (\r\n              <span className=\"ml-2 text-yellow-500\">\r\n                🔥 {streak} streak!\r\n              </span>\r\n            )}\r\n          </div>\r\n          <div className={`text-lg font-semibold ${timeLeft <= 10 ? 'text-red-500 animate-pulse' : themeClasses.text}`}>\r\n            Time: {timeLeft}s\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"w-full h-2 bg-gray-200 dark:bg-dark-border rounded-full overflow-hidden\">\r\n          <div\r\n            ref={progressRef}\r\n            className={`h-full transition-all duration-1000 ${\r\n              timeLeft <= 10 ? 'bg-red-500' : 'bg-primary'\r\n            }`}\r\n            style={{ width: '100%' }}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {currentWord && (\r\n        <div className={`${themeClasses.container} rounded-lg shadow-md p-6 transform transition-all duration-300 hover:shadow-lg`}>\r\n          <div className={`text-3xl font-bold text-center mb-4 ${themeClasses.text}`}>\r\n            {currentWord.japanese}\r\n          </div>\r\n\r\n          {!showHint && !showResult && (\r\n            <button\r\n              onClick={() => setShowHint(true)}\r\n              className={`w-full mb-6 ${themeClasses.button.hint} py-3 rounded-lg transition-colors`}\r\n            >\r\n              Show Hint\r\n            </button>\r\n          )}\r\n\r\n          {showHint && !showResult && (\r\n            <div className={`mb-6 p-4 rounded-lg ${themeClasses.hint}`}>\r\n              <p>{currentWord.hint}</p>\r\n            </div>\r\n          )}\r\n\r\n          <form onSubmit={handleAnswer} className=\"space-y-4\">\r\n            <input\r\n              ref={inputRef}\r\n              type=\"text\"\r\n              value={userAnswer}\r\n              onChange={(e) => setUserAnswer(e.target.value)}\r\n              placeholder=\"Type the English translation\"\r\n              className={`w-full p-3 border rounded-lg ${themeClasses.input} focus:ring-2 focus:ring-primary focus:border-primary`}\r\n              disabled={showResult}\r\n            />\r\n\r\n            {!showResult ? (\r\n              <button\r\n                type=\"submit\"\r\n                className={`w-full ${themeClasses.button.primary} py-3 rounded-lg transition-colors`}\r\n              >\r\n                Check Answer\r\n              </button>\r\n            ) : (\r\n              <div className=\"space-y-4\">\r\n                <div className={`text-center p-4 rounded-lg ${\r\n                  isCorrect ? themeClasses.result.correct : themeClasses.result.incorrect\r\n                }`}>\r\n                  {isCorrect ? 'Correct! 🎉' : `Incorrect. The answer is: ${currentWord.english}`}\r\n                </div>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={handleNext}\r\n                  className={`w-full ${themeClasses.button.secondary} py-3 rounded-lg transition-colors`}\r\n                >\r\n                  Next Word\r\n                </button>\r\n              </div>\r\n            )}\r\n          </form>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WordPractice; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}